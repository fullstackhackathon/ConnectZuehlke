/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Address
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Address {

    @JsonProperty("Street")

    private String street = null;

    @JsonProperty("Zip")

    private Integer zip = null;

    @JsonProperty("City")

    private String city = null;

    @JsonProperty("Country")

    private String country = null;

    @JsonProperty("GeoLocation")

    private GeoLocation geoLocation = null;

    public Address street(String street) {
        this.street = street;
        return this;
    }


    /**
     * Get street
     *
     * @return street
     **/
    @Schema(description = "")
    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public Address zip(Integer zip) {
        this.zip = zip;
        return this;
    }


    /**
     * Get zip
     *
     * @return zip
     **/
    @Schema(description = "")
    public Integer getZip() {
        return zip;
    }

    public void setZip(Integer zip) {
        this.zip = zip;
    }

    public Address city(String city) {
        this.city = city;
        return this;
    }


    /**
     * Get city
     *
     * @return city
     **/
    @Schema(description = "")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Address country(String country) {
        this.country = country;
        return this;
    }


    /**
     * Get country
     *
     * @return country
     **/
    @Schema(description = "")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Address geoLocation(GeoLocation geoLocation) {
        this.geoLocation = geoLocation;
        return this;
    }


    /**
     * Get geoLocation
     *
     * @return geoLocation
     **/
    @Schema(description = "")
    public GeoLocation getGeoLocation() {
        return geoLocation;
    }

    public void setGeoLocation(GeoLocation geoLocation) {
        this.geoLocation = geoLocation;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Address address = (Address) o;
        return Objects.equals(this.street, address.street) &&
                Objects.equals(this.zip, address.zip) &&
                Objects.equals(this.city, address.city) &&
                Objects.equals(this.country, address.country) &&
                Objects.equals(this.geoLocation, address.geoLocation);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(street, zip, city, country, geoLocation);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Address {\n");

        sb.append("    street: ").append(toIndentedString(street)).append("\n");
        sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
