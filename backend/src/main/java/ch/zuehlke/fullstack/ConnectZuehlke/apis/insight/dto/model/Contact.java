/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Contact
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Contact {

    @JsonProperty("Active")

    private Boolean active = null;

    @JsonProperty("ActiveText")

    private String activeText = null;

    @JsonProperty("FirstName")

    private String firstName = null;

    @JsonProperty("LastName")

    private String lastName = null;

    @JsonProperty("FullName")

    private String fullName = null;

    @JsonProperty("Position")

    private String position = null;

    @JsonProperty("Phone")

    private String phone = null;

    @JsonProperty("MobilePhone")

    private String mobilePhone = null;

    @JsonProperty("EMail")

    private String email = null;

    @JsonProperty("LinkedIn")

    private String linkedIn = null;

    @JsonProperty("Xing")

    private String xing = null;
    @JsonProperty("Department")

    private DepartmentEnum department = null;
    @JsonProperty("ResponsibleEmployee")

    private EmployeeResult responsibleEmployee = null;
    @JsonProperty("Customer")

    private Customer customer = null;
    @JsonProperty("Id")

    private Long id = null;

    public Contact active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Get active
     *
     * @return active
     **/
    @Schema(description = "")
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Get activeText
     *
     * @return activeText
     **/
    @Schema(description = "")
    public String getActiveText() {
        return activeText;
    }

    public Contact firstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Get firstName
     *
     * @return firstName
     **/
    @Schema(description = "")
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public Contact lastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Get lastName
     *
     * @return lastName
     **/
    @Schema(description = "")
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Get fullName
     *
     * @return fullName
     **/
    @Schema(description = "")
    public String getFullName() {
        return fullName;
    }

    public Contact position(String position) {
        this.position = position;
        return this;
    }

    /**
     * Get position
     *
     * @return position
     **/
    @Schema(description = "")
    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public Contact phone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Get phone
     *
     * @return phone
     **/
    @Schema(description = "")
    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Contact mobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
        return this;
    }

    /**
     * Get mobilePhone
     *
     * @return mobilePhone
     **/
    @Schema(description = "")
    public String getMobilePhone() {
        return mobilePhone;
    }

    public void setMobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
    }

    public Contact email(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     **/
    @Schema(description = "")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Contact linkedIn(String linkedIn) {
        this.linkedIn = linkedIn;
        return this;
    }

    /**
     * Get linkedIn
     *
     * @return linkedIn
     **/
    @Schema(description = "")
    public String getLinkedIn() {
        return linkedIn;
    }

    public void setLinkedIn(String linkedIn) {
        this.linkedIn = linkedIn;
    }

    public Contact xing(String xing) {
        this.xing = xing;
        return this;
    }

    /**
     * Get xing
     *
     * @return xing
     **/
    @Schema(description = "")
    public String getXing() {
        return xing;
    }

    public void setXing(String xing) {
        this.xing = xing;
    }

    public Contact department(DepartmentEnum department) {
        this.department = department;
        return this;
    }

    /**
     * Get department
     *
     * @return department
     **/
    @Schema(description = "")
    public DepartmentEnum getDepartment() {
        return department;
    }

    public void setDepartment(DepartmentEnum department) {
        this.department = department;
    }

    public Contact responsibleEmployee(EmployeeResult responsibleEmployee) {
        this.responsibleEmployee = responsibleEmployee;
        return this;
    }

    /**
     * Get responsibleEmployee
     *
     * @return responsibleEmployee
     **/
    @Schema(description = "")
    public EmployeeResult getResponsibleEmployee() {
        return responsibleEmployee;
    }

    public void setResponsibleEmployee(EmployeeResult responsibleEmployee) {
        this.responsibleEmployee = responsibleEmployee;
    }

    public Contact customer(Customer customer) {
        this.customer = customer;
        return this;
    }

    /**
     * Get customer
     *
     * @return customer
     **/
    @Schema(description = "")
    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public Contact id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Contact contact = (Contact) o;
        return Objects.equals(this.active, contact.active) &&
                Objects.equals(this.activeText, contact.activeText) &&
                Objects.equals(this.firstName, contact.firstName) &&
                Objects.equals(this.lastName, contact.lastName) &&
                Objects.equals(this.fullName, contact.fullName) &&
                Objects.equals(this.position, contact.position) &&
                Objects.equals(this.phone, contact.phone) &&
                Objects.equals(this.mobilePhone, contact.mobilePhone) &&
                Objects.equals(this.email, contact.email) &&
                Objects.equals(this.linkedIn, contact.linkedIn) &&
                Objects.equals(this.xing, contact.xing) &&
                Objects.equals(this.department, contact.department) &&
                Objects.equals(this.responsibleEmployee, contact.responsibleEmployee) &&
                Objects.equals(this.customer, contact.customer) &&
                Objects.equals(this.id, contact.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(active, activeText, firstName, lastName, fullName, position, phone, mobilePhone, email, linkedIn, xing, department, responsibleEmployee, customer, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Contact {\n");

        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    activeText: ").append(toIndentedString(activeText)).append("\n");
        sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
        sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
        sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    linkedIn: ").append(toIndentedString(linkedIn)).append("\n");
        sb.append("    xing: ").append(toIndentedString(xing)).append("\n");
        sb.append("    department: ").append(toIndentedString(department)).append("\n");
        sb.append("    responsibleEmployee: ").append(toIndentedString(responsibleEmployee)).append("\n");
        sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets department
     */
    public enum DepartmentEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6),
        NUMBER_7(7),
        NUMBER_8(8),
        NUMBER_9(9),
        NUMBER_10(10);

        private Integer value;

        DepartmentEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static DepartmentEnum fromValue(String text) {
            for (DepartmentEnum b : DepartmentEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
