/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * AssetSourcePolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class AssetSourcePolicy {
    @JsonProperty("Source")

    private SourceEnum source = null;
    @JsonProperty("SourceText")

    private String sourceText = null;
    @JsonProperty("IsDisabled")

    private Boolean isDisabled = null;
    @JsonProperty("IsUsed")

    private Boolean isUsed = null;

    public AssetSourcePolicy source(SourceEnum source) {
        this.source = source;
        return this;
    }

    /**
     * Get source
     *
     * @return source
     **/
    @Schema(description = "")
    public SourceEnum getSource() {
        return source;
    }

    public void setSource(SourceEnum source) {
        this.source = source;
    }

    /**
     * Get sourceText
     *
     * @return sourceText
     **/
    @Schema(description = "")
    public String getSourceText() {
        return sourceText;
    }

    /**
     * Get isDisabled
     *
     * @return isDisabled
     **/
    @Schema(description = "")
    public Boolean isIsDisabled() {
        return isDisabled;
    }

    public AssetSourcePolicy isUsed(Boolean isUsed) {
        this.isUsed = isUsed;
        return this;
    }

    /**
     * Get isUsed
     *
     * @return isUsed
     **/
    @Schema(description = "")
    public Boolean isIsUsed() {
        return isUsed;
    }

    public void setIsUsed(Boolean isUsed) {
        this.isUsed = isUsed;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AssetSourcePolicy assetSourcePolicy = (AssetSourcePolicy) o;
        return Objects.equals(this.source, assetSourcePolicy.source) &&
                Objects.equals(this.sourceText, assetSourcePolicy.sourceText) &&
                Objects.equals(this.isDisabled, assetSourcePolicy.isDisabled) &&
                Objects.equals(this.isUsed, assetSourcePolicy.isUsed);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(source, sourceText, isDisabled, isUsed);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AssetSourcePolicy {\n");

        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    sourceText: ").append(toIndentedString(sourceText)).append("\n");
        sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
        sb.append("    isUsed: ").append(toIndentedString(isUsed)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets source
     */
    public enum SourceEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6),
        NUMBER_7(7),
        NUMBER_8(8),
        NUMBER_9(9),
        NUMBER_11(11),
        NUMBER_12(12),
        NUMBER_13(13),
        NUMBER_14(14),
        NUMBER_15(15);

        private Integer value;

        SourceEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SourceEnum fromValue(String text) {
            for (SourceEnum b : SourceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
