/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Solution
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Solution {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Code")

    private String code = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("ShortDescription")

    private String shortDescription = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("Active")

    private Boolean active = null;

    @JsonProperty("Offerings")

    private List<Offering> offerings = null;

    @JsonProperty("OrganisationUnit")

    private OrganisationUnit organisationUnit = null;

    @JsonProperty("Company")

    private Company company = null;

    @JsonProperty("IsGroup")

    private Boolean isGroup = null;

    public Solution id(Long id) {
        this.id = id;
        return this;
    }


    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Solution code(String code) {
        this.code = code;
        return this;
    }


    /**
     * Get code
     *
     * @return code
     **/
    @Schema(description = "")
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public Solution name(String name) {
        this.name = name;
        return this;
    }


    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Solution shortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
        return this;
    }


    /**
     * Get shortDescription
     *
     * @return shortDescription
     **/
    @Schema(description = "")
    public String getShortDescription() {
        return shortDescription;
    }

    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    public Solution description(String description) {
        this.description = description;
        return this;
    }


    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Solution active(Boolean active) {
        this.active = active;
        return this;
    }


    /**
     * Get active
     *
     * @return active
     **/
    @Schema(description = "")
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Solution offerings(List<Offering> offerings) {
        this.offerings = offerings;
        return this;
    }

    public Solution addOfferingsItem(Offering offeringsItem) {
        if (this.offerings == null) {
            this.offerings = new ArrayList<Offering>();
        }
        this.offerings.add(offeringsItem);
        return this;
    }

    /**
     * Get offerings
     *
     * @return offerings
     **/
    @Schema(description = "")
    public List<Offering> getOfferings() {
        return offerings;
    }

    public void setOfferings(List<Offering> offerings) {
        this.offerings = offerings;
    }

    public Solution organisationUnit(OrganisationUnit organisationUnit) {
        this.organisationUnit = organisationUnit;
        return this;
    }


    /**
     * Get organisationUnit
     *
     * @return organisationUnit
     **/
    @Schema(description = "")
    public OrganisationUnit getOrganisationUnit() {
        return organisationUnit;
    }

    public void setOrganisationUnit(OrganisationUnit organisationUnit) {
        this.organisationUnit = organisationUnit;
    }

    public Solution company(Company company) {
        this.company = company;
        return this;
    }


    /**
     * Get company
     *
     * @return company
     **/
    @Schema(description = "")
    public Company getCompany() {
        return company;
    }

    public void setCompany(Company company) {
        this.company = company;
    }

    public Solution isGroup(Boolean isGroup) {
        this.isGroup = isGroup;
        return this;
    }


    /**
     * Get isGroup
     *
     * @return isGroup
     **/
    @Schema(description = "")
    public Boolean isIsGroup() {
        return isGroup;
    }

    public void setIsGroup(Boolean isGroup) {
        this.isGroup = isGroup;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Solution solution = (Solution) o;
        return Objects.equals(this.id, solution.id) &&
                Objects.equals(this.code, solution.code) &&
                Objects.equals(this.name, solution.name) &&
                Objects.equals(this.shortDescription, solution.shortDescription) &&
                Objects.equals(this.description, solution.description) &&
                Objects.equals(this.active, solution.active) &&
                Objects.equals(this.offerings, solution.offerings) &&
                Objects.equals(this.organisationUnit, solution.organisationUnit) &&
                Objects.equals(this.company, solution.company) &&
                Objects.equals(this.isGroup, solution.isGroup);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, code, name, shortDescription, description, active, offerings, organisationUnit, company, isGroup);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Solution {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    offerings: ").append(toIndentedString(offerings)).append("\n");
        sb.append("    organisationUnit: ").append(toIndentedString(organisationUnit)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    isGroup: ").append(toIndentedString(isGroup)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
