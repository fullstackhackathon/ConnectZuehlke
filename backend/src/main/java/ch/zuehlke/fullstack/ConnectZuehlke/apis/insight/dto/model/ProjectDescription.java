/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ProjectDescription
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class ProjectDescription {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Title")

    private String title = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("Tasks")

    private String tasks = null;

    @JsonProperty("TitleDe")

    private String titleDe = null;

    @JsonProperty("DescriptionDe")

    private String descriptionDe = null;

    @JsonProperty("TasksDe")

    private String tasksDe = null;
    @JsonProperty("ReleaseStateEn")

    private ReleaseStateEnEnum releaseStateEn = null;
    @JsonProperty("ReleaseStateDe")

    private ReleaseStateDeEnum releaseStateDe = null;
    @JsonProperty("Language")

    private LanguageEnum language = null;
    @JsonProperty("LanguageText")

    private String languageText = null;
    @JsonProperty("ProjectId")

    private Long projectId = null;
    @JsonProperty("Project")

    private Project project = null;
    @JsonProperty("EmployeeProjectId")

    private Long employeeProjectId = null;
    @JsonProperty("EmployeeProject")

    private EmployeeProject employeeProject = null;
    @JsonProperty("EmployeeId")

    private Long employeeId = null;
    @JsonProperty("Employee")

    private EmployeeResult employee = null;
    @JsonProperty("Role")

    private String role = null;
    @JsonProperty("OverrideOfficialDescription")

    private Boolean overrideOfficialDescription = null;
    @JsonProperty("Skills")

    private List<EmployeeSkill> skills = null;

    public ProjectDescription id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public ProjectDescription title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     *
     * @return title
     **/
    @Schema(description = "")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ProjectDescription description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public ProjectDescription tasks(String tasks) {
        this.tasks = tasks;
        return this;
    }

    /**
     * Get tasks
     *
     * @return tasks
     **/
    @Schema(description = "")
    public String getTasks() {
        return tasks;
    }

    public void setTasks(String tasks) {
        this.tasks = tasks;
    }

    public ProjectDescription titleDe(String titleDe) {
        this.titleDe = titleDe;
        return this;
    }

    /**
     * Get titleDe
     *
     * @return titleDe
     **/
    @Schema(description = "")
    public String getTitleDe() {
        return titleDe;
    }

    public void setTitleDe(String titleDe) {
        this.titleDe = titleDe;
    }

    public ProjectDescription descriptionDe(String descriptionDe) {
        this.descriptionDe = descriptionDe;
        return this;
    }

    /**
     * Get descriptionDe
     *
     * @return descriptionDe
     **/
    @Schema(description = "")
    public String getDescriptionDe() {
        return descriptionDe;
    }

    public void setDescriptionDe(String descriptionDe) {
        this.descriptionDe = descriptionDe;
    }

    public ProjectDescription tasksDe(String tasksDe) {
        this.tasksDe = tasksDe;
        return this;
    }

    /**
     * Get tasksDe
     *
     * @return tasksDe
     **/
    @Schema(description = "")
    public String getTasksDe() {
        return tasksDe;
    }

    public void setTasksDe(String tasksDe) {
        this.tasksDe = tasksDe;
    }

    public ProjectDescription releaseStateEn(ReleaseStateEnEnum releaseStateEn) {
        this.releaseStateEn = releaseStateEn;
        return this;
    }

    /**
     * Get releaseStateEn
     *
     * @return releaseStateEn
     **/
    @Schema(description = "")
    public ReleaseStateEnEnum getReleaseStateEn() {
        return releaseStateEn;
    }

    public void setReleaseStateEn(ReleaseStateEnEnum releaseStateEn) {
        this.releaseStateEn = releaseStateEn;
    }

    public ProjectDescription releaseStateDe(ReleaseStateDeEnum releaseStateDe) {
        this.releaseStateDe = releaseStateDe;
        return this;
    }

    /**
     * Get releaseStateDe
     *
     * @return releaseStateDe
     **/
    @Schema(description = "")
    public ReleaseStateDeEnum getReleaseStateDe() {
        return releaseStateDe;
    }

    public void setReleaseStateDe(ReleaseStateDeEnum releaseStateDe) {
        this.releaseStateDe = releaseStateDe;
    }

    public ProjectDescription language(LanguageEnum language) {
        this.language = language;
        return this;
    }

    /**
     * Get language
     *
     * @return language
     **/
    @Schema(description = "")
    public LanguageEnum getLanguage() {
        return language;
    }

    public void setLanguage(LanguageEnum language) {
        this.language = language;
    }

    /**
     * Get languageText
     *
     * @return languageText
     **/
    @Schema(description = "")
    public String getLanguageText() {
        return languageText;
    }

    public ProjectDescription projectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }

    /**
     * Get projectId
     *
     * @return projectId
     **/
    @Schema(description = "")
    public Long getProjectId() {
        return projectId;
    }

    public void setProjectId(Long projectId) {
        this.projectId = projectId;
    }

    public ProjectDescription project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public ProjectDescription employeeProjectId(Long employeeProjectId) {
        this.employeeProjectId = employeeProjectId;
        return this;
    }

    /**
     * Get employeeProjectId
     *
     * @return employeeProjectId
     **/
    @Schema(description = "")
    public Long getEmployeeProjectId() {
        return employeeProjectId;
    }

    public void setEmployeeProjectId(Long employeeProjectId) {
        this.employeeProjectId = employeeProjectId;
    }

    public ProjectDescription employeeProject(EmployeeProject employeeProject) {
        this.employeeProject = employeeProject;
        return this;
    }

    /**
     * Get employeeProject
     *
     * @return employeeProject
     **/
    @Schema(description = "")
    public EmployeeProject getEmployeeProject() {
        return employeeProject;
    }

    public void setEmployeeProject(EmployeeProject employeeProject) {
        this.employeeProject = employeeProject;
    }

    public ProjectDescription employeeId(Long employeeId) {
        this.employeeId = employeeId;
        return this;
    }

    /**
     * Get employeeId
     *
     * @return employeeId
     **/
    @Schema(description = "")
    public Long getEmployeeId() {
        return employeeId;
    }

    public void setEmployeeId(Long employeeId) {
        this.employeeId = employeeId;
    }

    public ProjectDescription employee(EmployeeResult employee) {
        this.employee = employee;
        return this;
    }

    /**
     * Get employee
     *
     * @return employee
     **/
    @Schema(description = "")
    public EmployeeResult getEmployee() {
        return employee;
    }

    public void setEmployee(EmployeeResult employee) {
        this.employee = employee;
    }

    public ProjectDescription role(String role) {
        this.role = role;
        return this;
    }

    /**
     * Get role
     *
     * @return role
     **/
    @Schema(description = "")
    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    public ProjectDescription overrideOfficialDescription(Boolean overrideOfficialDescription) {
        this.overrideOfficialDescription = overrideOfficialDescription;
        return this;
    }

    /**
     * Get overrideOfficialDescription
     *
     * @return overrideOfficialDescription
     **/
    @Schema(description = "")
    public Boolean isOverrideOfficialDescription() {
        return overrideOfficialDescription;
    }

    public void setOverrideOfficialDescription(Boolean overrideOfficialDescription) {
        this.overrideOfficialDescription = overrideOfficialDescription;
    }

    public ProjectDescription skills(List<EmployeeSkill> skills) {
        this.skills = skills;
        return this;
    }

    public ProjectDescription addSkillsItem(EmployeeSkill skillsItem) {
        if (this.skills == null) {
            this.skills = new ArrayList<EmployeeSkill>();
        }
        this.skills.add(skillsItem);
        return this;
    }

    /**
     * Get skills
     *
     * @return skills
     **/
    @Schema(description = "")
    public List<EmployeeSkill> getSkills() {
        return skills;
    }

    public void setSkills(List<EmployeeSkill> skills) {
        this.skills = skills;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProjectDescription projectDescription = (ProjectDescription) o;
        return Objects.equals(this.id, projectDescription.id) &&
                Objects.equals(this.title, projectDescription.title) &&
                Objects.equals(this.description, projectDescription.description) &&
                Objects.equals(this.tasks, projectDescription.tasks) &&
                Objects.equals(this.titleDe, projectDescription.titleDe) &&
                Objects.equals(this.descriptionDe, projectDescription.descriptionDe) &&
                Objects.equals(this.tasksDe, projectDescription.tasksDe) &&
                Objects.equals(this.releaseStateEn, projectDescription.releaseStateEn) &&
                Objects.equals(this.releaseStateDe, projectDescription.releaseStateDe) &&
                Objects.equals(this.language, projectDescription.language) &&
                Objects.equals(this.languageText, projectDescription.languageText) &&
                Objects.equals(this.projectId, projectDescription.projectId) &&
                Objects.equals(this.project, projectDescription.project) &&
                Objects.equals(this.employeeProjectId, projectDescription.employeeProjectId) &&
                Objects.equals(this.employeeProject, projectDescription.employeeProject) &&
                Objects.equals(this.employeeId, projectDescription.employeeId) &&
                Objects.equals(this.employee, projectDescription.employee) &&
                Objects.equals(this.role, projectDescription.role) &&
                Objects.equals(this.overrideOfficialDescription, projectDescription.overrideOfficialDescription) &&
                Objects.equals(this.skills, projectDescription.skills);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, title, description, tasks, titleDe, descriptionDe, tasksDe, releaseStateEn, releaseStateDe, language, languageText, projectId, project, employeeProjectId, employeeProject, employeeId, employee, role, overrideOfficialDescription, skills);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProjectDescription {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
        sb.append("    titleDe: ").append(toIndentedString(titleDe)).append("\n");
        sb.append("    descriptionDe: ").append(toIndentedString(descriptionDe)).append("\n");
        sb.append("    tasksDe: ").append(toIndentedString(tasksDe)).append("\n");
        sb.append("    releaseStateEn: ").append(toIndentedString(releaseStateEn)).append("\n");
        sb.append("    releaseStateDe: ").append(toIndentedString(releaseStateDe)).append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    languageText: ").append(toIndentedString(languageText)).append("\n");
        sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
        sb.append("    project: ").append(toIndentedString(project)).append("\n");
        sb.append("    employeeProjectId: ").append(toIndentedString(employeeProjectId)).append("\n");
        sb.append("    employeeProject: ").append(toIndentedString(employeeProject)).append("\n");
        sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
        sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    overrideOfficialDescription: ").append(toIndentedString(overrideOfficialDescription)).append("\n");
        sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets releaseStateEn
     */
    public enum ReleaseStateEnEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        ReleaseStateEnEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ReleaseStateEnEnum fromValue(String text) {
            for (ReleaseStateEnEnum b : ReleaseStateEnEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets releaseStateDe
     */
    public enum ReleaseStateDeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        ReleaseStateDeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ReleaseStateDeEnum fromValue(String text) {
            for (ReleaseStateDeEnum b : ReleaseStateDeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets language
     */
    public enum LanguageEnum {
        NUMBER_0(0),
        NUMBER_1(1);

        private Integer value;

        LanguageEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static LanguageEnum fromValue(String text) {
            for (LanguageEnum b : LanguageEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
