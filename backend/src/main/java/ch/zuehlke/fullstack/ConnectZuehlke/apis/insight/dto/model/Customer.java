/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Customer
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Customer {

    @JsonProperty("VertecId")

    private Long vertecId = null;

    @JsonProperty("Currency")

    private String currency = null;

    @JsonProperty("WikipediaLink")

    private String wikipediaLink = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("DescriptionDe")

    private String descriptionDe = null;

    @JsonProperty("HasLogo")

    private Boolean hasLogo = null;

    @JsonProperty("Street")

    private String street = null;

    @JsonProperty("City")

    private String city = null;

    @JsonProperty("Zip")

    private Integer zip = null;

    @JsonProperty("Country")

    private String country = null;

    @JsonProperty("Longitude")

    private Double longitude = null;

    @JsonProperty("Latitude")

    private Double latitude = null;

    @JsonProperty("Responsible")

    private Employee responsible = null;
    @JsonProperty("Role")

    private RoleEnum role = null;
    @JsonProperty("RoleText")

    private String roleText = null;
    @JsonProperty("Type")

    private TypeEnum type = null;
    @JsonProperty("TypeText")

    private String typeText = null;
    @JsonProperty("Parent")

    private Customer parent = null;
    @JsonProperty("YearlyTurnovers")

    private List<YearlyTurnover> yearlyTurnovers = null;
    @JsonProperty("Children")

    private List<Customer> children = null;
    @JsonProperty("Services")

    private List<SupplierService> services = null;
    @JsonProperty("Industry")

    private String industry = null;
    @JsonProperty("Id")

    private Long id = null;

    public Customer vertecId(Long vertecId) {
        this.vertecId = vertecId;
        return this;
    }

    /**
     * Get vertecId
     *
     * @return vertecId
     **/
    @Schema(description = "")
    public Long getVertecId() {
        return vertecId;
    }

    public void setVertecId(Long vertecId) {
        this.vertecId = vertecId;
    }

    public Customer currency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get currency
     *
     * @return currency
     **/
    @Schema(description = "")
    public String getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public Customer wikipediaLink(String wikipediaLink) {
        this.wikipediaLink = wikipediaLink;
        return this;
    }

    /**
     * Get wikipediaLink
     *
     * @return wikipediaLink
     **/
    @Schema(description = "")
    public String getWikipediaLink() {
        return wikipediaLink;
    }

    public void setWikipediaLink(String wikipediaLink) {
        this.wikipediaLink = wikipediaLink;
    }

    public Customer name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Customer description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Customer descriptionDe(String descriptionDe) {
        this.descriptionDe = descriptionDe;
        return this;
    }

    /**
     * Get descriptionDe
     *
     * @return descriptionDe
     **/
    @Schema(description = "")
    public String getDescriptionDe() {
        return descriptionDe;
    }

    public void setDescriptionDe(String descriptionDe) {
        this.descriptionDe = descriptionDe;
    }

    public Customer hasLogo(Boolean hasLogo) {
        this.hasLogo = hasLogo;
        return this;
    }

    /**
     * Get hasLogo
     *
     * @return hasLogo
     **/
    @Schema(description = "")
    public Boolean isHasLogo() {
        return hasLogo;
    }

    public void setHasLogo(Boolean hasLogo) {
        this.hasLogo = hasLogo;
    }

    public Customer street(String street) {
        this.street = street;
        return this;
    }

    /**
     * Get street
     *
     * @return street
     **/
    @Schema(description = "")
    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public Customer city(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get city
     *
     * @return city
     **/
    @Schema(description = "")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Customer zip(Integer zip) {
        this.zip = zip;
        return this;
    }

    /**
     * Get zip
     *
     * @return zip
     **/
    @Schema(description = "")
    public Integer getZip() {
        return zip;
    }

    public void setZip(Integer zip) {
        this.zip = zip;
    }

    public Customer country(String country) {
        this.country = country;
        return this;
    }

    /**
     * Get country
     *
     * @return country
     **/
    @Schema(description = "")
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public Customer longitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }

    /**
     * Get longitude
     *
     * @return longitude
     **/
    @Schema(description = "")
    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Customer latitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }

    /**
     * Get latitude
     *
     * @return latitude
     **/
    @Schema(description = "")
    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Customer responsible(Employee responsible) {
        this.responsible = responsible;
        return this;
    }

    /**
     * Get responsible
     *
     * @return responsible
     **/
    @Schema(description = "")
    public Employee getResponsible() {
        return responsible;
    }

    public void setResponsible(Employee responsible) {
        this.responsible = responsible;
    }

    public Customer role(RoleEnum role) {
        this.role = role;
        return this;
    }

    /**
     * Get role
     *
     * @return role
     **/
    @Schema(description = "")
    public RoleEnum getRole() {
        return role;
    }

    public void setRole(RoleEnum role) {
        this.role = role;
    }

    /**
     * Get roleText
     *
     * @return roleText
     **/
    @Schema(description = "")
    public String getRoleText() {
        return roleText;
    }

    public Customer type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(description = "")
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    /**
     * Get typeText
     *
     * @return typeText
     **/
    @Schema(description = "")
    public String getTypeText() {
        return typeText;
    }

    public Customer parent(Customer parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get parent
     *
     * @return parent
     **/
    @Schema(description = "")
    public Customer getParent() {
        return parent;
    }

    public void setParent(Customer parent) {
        this.parent = parent;
    }

    public Customer yearlyTurnovers(List<YearlyTurnover> yearlyTurnovers) {
        this.yearlyTurnovers = yearlyTurnovers;
        return this;
    }

    public Customer addYearlyTurnoversItem(YearlyTurnover yearlyTurnoversItem) {
        if (this.yearlyTurnovers == null) {
            this.yearlyTurnovers = new ArrayList<YearlyTurnover>();
        }
        this.yearlyTurnovers.add(yearlyTurnoversItem);
        return this;
    }

    /**
     * Get yearlyTurnovers
     *
     * @return yearlyTurnovers
     **/
    @Schema(description = "")
    public List<YearlyTurnover> getYearlyTurnovers() {
        return yearlyTurnovers;
    }

    public void setYearlyTurnovers(List<YearlyTurnover> yearlyTurnovers) {
        this.yearlyTurnovers = yearlyTurnovers;
    }

    public Customer children(List<Customer> children) {
        this.children = children;
        return this;
    }

    public Customer addChildrenItem(Customer childrenItem) {
        if (this.children == null) {
            this.children = new ArrayList<Customer>();
        }
        this.children.add(childrenItem);
        return this;
    }

    /**
     * Get children
     *
     * @return children
     **/
    @Schema(description = "")
    public List<Customer> getChildren() {
        return children;
    }

    public void setChildren(List<Customer> children) {
        this.children = children;
    }

    public Customer services(List<SupplierService> services) {
        this.services = services;
        return this;
    }

    public Customer addServicesItem(SupplierService servicesItem) {
        if (this.services == null) {
            this.services = new ArrayList<SupplierService>();
        }
        this.services.add(servicesItem);
        return this;
    }

    /**
     * Get services
     *
     * @return services
     **/
    @Schema(description = "")
    public List<SupplierService> getServices() {
        return services;
    }

    public void setServices(List<SupplierService> services) {
        this.services = services;
    }

    public Customer industry(String industry) {
        this.industry = industry;
        return this;
    }

    /**
     * Get industry
     *
     * @return industry
     **/
    @Schema(description = "")
    public String getIndustry() {
        return industry;
    }

    public void setIndustry(String industry) {
        this.industry = industry;
    }

    public Customer id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Customer customer = (Customer) o;
        return Objects.equals(this.vertecId, customer.vertecId) &&
                Objects.equals(this.currency, customer.currency) &&
                Objects.equals(this.wikipediaLink, customer.wikipediaLink) &&
                Objects.equals(this.name, customer.name) &&
                Objects.equals(this.description, customer.description) &&
                Objects.equals(this.descriptionDe, customer.descriptionDe) &&
                Objects.equals(this.hasLogo, customer.hasLogo) &&
                Objects.equals(this.street, customer.street) &&
                Objects.equals(this.city, customer.city) &&
                Objects.equals(this.zip, customer.zip) &&
                Objects.equals(this.country, customer.country) &&
                Objects.equals(this.longitude, customer.longitude) &&
                Objects.equals(this.latitude, customer.latitude) &&
                Objects.equals(this.responsible, customer.responsible) &&
                Objects.equals(this.role, customer.role) &&
                Objects.equals(this.roleText, customer.roleText) &&
                Objects.equals(this.type, customer.type) &&
                Objects.equals(this.typeText, customer.typeText) &&
                Objects.equals(this.parent, customer.parent) &&
                Objects.equals(this.yearlyTurnovers, customer.yearlyTurnovers) &&
                Objects.equals(this.children, customer.children) &&
                Objects.equals(this.services, customer.services) &&
                Objects.equals(this.industry, customer.industry) &&
                Objects.equals(this.id, customer.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(vertecId, currency, wikipediaLink, name, description, descriptionDe, hasLogo, street, city, zip, country, longitude, latitude, responsible, role, roleText, type, typeText, parent, yearlyTurnovers, children, services, industry, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Customer {\n");

        sb.append("    vertecId: ").append(toIndentedString(vertecId)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    wikipediaLink: ").append(toIndentedString(wikipediaLink)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    descriptionDe: ").append(toIndentedString(descriptionDe)).append("\n");
        sb.append("    hasLogo: ").append(toIndentedString(hasLogo)).append("\n");
        sb.append("    street: ").append(toIndentedString(street)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
        sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
        sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    roleText: ").append(toIndentedString(roleText)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    typeText: ").append(toIndentedString(typeText)).append("\n");
        sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
        sb.append("    yearlyTurnovers: ").append(toIndentedString(yearlyTurnovers)).append("\n");
        sb.append("    children: ").append(toIndentedString(children)).append("\n");
        sb.append("    services: ").append(toIndentedString(services)).append("\n");
        sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets role
     */
    public enum RoleEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4);

        private Integer value;

        RoleEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static RoleEnum fromValue(String text) {
            for (RoleEnum b : RoleEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        TypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
