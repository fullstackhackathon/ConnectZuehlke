/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Offering
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Offering {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("Solution")

    private Solution solution = null;

    @JsonProperty("SucceedingOfferings")

    private List<OfferingJourney> succeedingOfferings = null;

    @JsonProperty("PrecedingOfferings")

    private List<OfferingJourney> precedingOfferings = null;

    public Offering id(Long id) {
        this.id = id;
        return this;
    }


    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Offering name(String name) {
        this.name = name;
        return this;
    }


    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Offering description(String description) {
        this.description = description;
        return this;
    }


    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Offering solution(Solution solution) {
        this.solution = solution;
        return this;
    }


    /**
     * Get solution
     *
     * @return solution
     **/
    @Schema(description = "")
    public Solution getSolution() {
        return solution;
    }

    public void setSolution(Solution solution) {
        this.solution = solution;
    }

    public Offering succeedingOfferings(List<OfferingJourney> succeedingOfferings) {
        this.succeedingOfferings = succeedingOfferings;
        return this;
    }

    public Offering addSucceedingOfferingsItem(OfferingJourney succeedingOfferingsItem) {
        if (this.succeedingOfferings == null) {
            this.succeedingOfferings = new ArrayList<OfferingJourney>();
        }
        this.succeedingOfferings.add(succeedingOfferingsItem);
        return this;
    }

    /**
     * Get succeedingOfferings
     *
     * @return succeedingOfferings
     **/
    @Schema(description = "")
    public List<OfferingJourney> getSucceedingOfferings() {
        return succeedingOfferings;
    }

    public void setSucceedingOfferings(List<OfferingJourney> succeedingOfferings) {
        this.succeedingOfferings = succeedingOfferings;
    }

    public Offering precedingOfferings(List<OfferingJourney> precedingOfferings) {
        this.precedingOfferings = precedingOfferings;
        return this;
    }

    public Offering addPrecedingOfferingsItem(OfferingJourney precedingOfferingsItem) {
        if (this.precedingOfferings == null) {
            this.precedingOfferings = new ArrayList<OfferingJourney>();
        }
        this.precedingOfferings.add(precedingOfferingsItem);
        return this;
    }

    /**
     * Get precedingOfferings
     *
     * @return precedingOfferings
     **/
    @Schema(description = "")
    public List<OfferingJourney> getPrecedingOfferings() {
        return precedingOfferings;
    }

    public void setPrecedingOfferings(List<OfferingJourney> precedingOfferings) {
        this.precedingOfferings = precedingOfferings;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Offering offering = (Offering) o;
        return Objects.equals(this.id, offering.id) &&
                Objects.equals(this.name, offering.name) &&
                Objects.equals(this.description, offering.description) &&
                Objects.equals(this.solution, offering.solution) &&
                Objects.equals(this.succeedingOfferings, offering.succeedingOfferings) &&
                Objects.equals(this.precedingOfferings, offering.precedingOfferings);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, name, description, solution, succeedingOfferings, precedingOfferings);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Offering {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
        sb.append("    succeedingOfferings: ").append(toIndentedString(succeedingOfferings)).append("\n");
        sb.append("    precedingOfferings: ").append(toIndentedString(precedingOfferings)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
