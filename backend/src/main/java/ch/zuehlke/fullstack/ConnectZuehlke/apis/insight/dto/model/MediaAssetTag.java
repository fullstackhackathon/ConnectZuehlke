/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * MediaAssetTag
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class MediaAssetTag {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("EntityId")

    private Long entityId = null;
    @JsonProperty("EntityType")

    private EntityTypeEnum entityType = null;
    @JsonProperty("TypeName")

    private String typeName = null;
    @JsonProperty("Name")

    private String name = null;
    @JsonProperty("Thumb")

    private String thumb = null;
    @JsonProperty("Rank")

    private Integer rank = null;

    public MediaAssetTag id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public MediaAssetTag entityId(Long entityId) {
        this.entityId = entityId;
        return this;
    }

    /**
     * Get entityId
     *
     * @return entityId
     **/
    @Schema(description = "")
    public Long getEntityId() {
        return entityId;
    }

    public void setEntityId(Long entityId) {
        this.entityId = entityId;
    }

    public MediaAssetTag entityType(EntityTypeEnum entityType) {
        this.entityType = entityType;
        return this;
    }

    /**
     * Get entityType
     *
     * @return entityType
     **/
    @Schema(description = "")
    public EntityTypeEnum getEntityType() {
        return entityType;
    }

    public void setEntityType(EntityTypeEnum entityType) {
        this.entityType = entityType;
    }

    /**
     * Get typeName
     *
     * @return typeName
     **/
    @Schema(description = "")
    public String getTypeName() {
        return typeName;
    }

    public MediaAssetTag name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public MediaAssetTag thumb(String thumb) {
        this.thumb = thumb;
        return this;
    }

    /**
     * Get thumb
     *
     * @return thumb
     **/
    @Schema(description = "")
    public String getThumb() {
        return thumb;
    }

    public void setThumb(String thumb) {
        this.thumb = thumb;
    }

    public MediaAssetTag rank(Integer rank) {
        this.rank = rank;
        return this;
    }

    /**
     * Get rank
     *
     * @return rank
     **/
    @Schema(description = "")
    public Integer getRank() {
        return rank;
    }

    public void setRank(Integer rank) {
        this.rank = rank;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MediaAssetTag mediaAssetTag = (MediaAssetTag) o;
        return Objects.equals(this.id, mediaAssetTag.id) &&
                Objects.equals(this.entityId, mediaAssetTag.entityId) &&
                Objects.equals(this.entityType, mediaAssetTag.entityType) &&
                Objects.equals(this.typeName, mediaAssetTag.typeName) &&
                Objects.equals(this.name, mediaAssetTag.name) &&
                Objects.equals(this.thumb, mediaAssetTag.thumb) &&
                Objects.equals(this.rank, mediaAssetTag.rank);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, entityId, entityType, typeName, name, thumb, rank);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MediaAssetTag {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
        sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
        sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    thumb: ").append(toIndentedString(thumb)).append("\n");
        sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets entityType
     */
    public enum EntityTypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6),
        NUMBER_7(7),
        NUMBER_8(8),
        NUMBER_9(9),
        NUMBER_10(10),
        NUMBER_11(11),
        NUMBER_12(12),
        NUMBER_13(13);

        private Integer value;

        EntityTypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static EntityTypeEnum fromValue(String text) {
            for (EntityTypeEnum b : EntityTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
