/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.Employee;
import ch.zuehlke.insight.client.model.Skill;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Interest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Interest {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Skill")

    private Skill skill = null;

    @JsonProperty("IsLike")

    private Boolean isLike = null;

    @JsonProperty("Employee")

    private Employee employee = null;
    @JsonProperty("TargetLevel")

    private TargetLevelEnum targetLevel = null;
    @JsonProperty("Description")

    private String description = null;
    @JsonProperty("Days")

    private Double days = null;
    @JsonProperty("Costs")

    private Double costs = null;
    @JsonProperty("TargetLevelText")

    private String targetLevelText = null;

    public Interest id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Interest skill(Skill skill) {
        this.skill = skill;
        return this;
    }

    /**
     * Get skill
     *
     * @return skill
     **/
    @Schema(description = "")
    public Skill getSkill() {
        return skill;
    }

    public void setSkill(Skill skill) {
        this.skill = skill;
    }

    public Interest isLike(Boolean isLike) {
        this.isLike = isLike;
        return this;
    }

    /**
     * Get isLike
     *
     * @return isLike
     **/
    @Schema(description = "")
    public Boolean isIsLike() {
        return isLike;
    }

    public void setIsLike(Boolean isLike) {
        this.isLike = isLike;
    }

    public Interest employee(Employee employee) {
        this.employee = employee;
        return this;
    }

    /**
     * Get employee
     *
     * @return employee
     **/
    @Schema(description = "")
    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Interest targetLevel(TargetLevelEnum targetLevel) {
        this.targetLevel = targetLevel;
        return this;
    }

    /**
     * Get targetLevel
     *
     * @return targetLevel
     **/
    @Schema(description = "")
    public TargetLevelEnum getTargetLevel() {
        return targetLevel;
    }

    public void setTargetLevel(TargetLevelEnum targetLevel) {
        this.targetLevel = targetLevel;
    }

    public Interest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Interest days(Double days) {
        this.days = days;
        return this;
    }

    /**
     * Get days
     *
     * @return days
     **/
    @Schema(description = "")
    public Double getDays() {
        return days;
    }

    public void setDays(Double days) {
        this.days = days;
    }

    public Interest costs(Double costs) {
        this.costs = costs;
        return this;
    }

    /**
     * Get costs
     *
     * @return costs
     **/
    @Schema(description = "")
    public Double getCosts() {
        return costs;
    }

    public void setCosts(Double costs) {
        this.costs = costs;
    }

    /**
     * Get targetLevelText
     *
     * @return targetLevelText
     **/
    @Schema(description = "")
    public String getTargetLevelText() {
        return targetLevelText;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Interest interest = (Interest) o;
        return Objects.equals(this.id, interest.id) &&
                Objects.equals(this.skill, interest.skill) &&
                Objects.equals(this.isLike, interest.isLike) &&
                Objects.equals(this.employee, interest.employee) &&
                Objects.equals(this.targetLevel, interest.targetLevel) &&
                Objects.equals(this.description, interest.description) &&
                Objects.equals(this.days, interest.days) &&
                Objects.equals(this.costs, interest.costs) &&
                Objects.equals(this.targetLevelText, interest.targetLevelText);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, skill, isLike, employee, targetLevel, description, days, costs, targetLevelText);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Interest {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
        sb.append("    isLike: ").append(toIndentedString(isLike)).append("\n");
        sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
        sb.append("    targetLevel: ").append(toIndentedString(targetLevel)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    days: ").append(toIndentedString(days)).append("\n");
        sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
        sb.append("    targetLevelText: ").append(toIndentedString(targetLevelText)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets targetLevel
     */
    public enum TargetLevelEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        TargetLevelEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TargetLevelEnum fromValue(String text) {
            for (TargetLevelEnum b : TargetLevelEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
