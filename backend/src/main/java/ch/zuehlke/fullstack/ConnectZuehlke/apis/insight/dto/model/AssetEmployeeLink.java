/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.Project;
import ch.zuehlke.insight.client.model.SkillProof;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

/**
 * AssetEmployeeLink
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class AssetEmployeeLink {

    @JsonProperty("AssetId")

    private Long assetId = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("Qualification")

    private String qualification = null;

    @JsonProperty("Title")

    private String title = null;

    @JsonProperty("JobProfile")

    private String jobProfile = null;

    @JsonProperty("Location")

    private String location = null;

    @JsonProperty("Code")

    private String code = null;

    @JsonProperty("ExperiencePoints")

    private Integer experiencePoints = null;

    @JsonProperty("Description")

    private String description = null;
    @JsonProperty("Source")

    private SourceEnum source = null;
    @JsonProperty("Project")

    private Project project = null;
    @JsonProperty("Experience")

    private ExperienceEnum experience = null;
    @JsonProperty("ExperienceText")

    private String experienceText = null;
    @JsonProperty("Role")

    private RoleEnum role = null;
    @JsonProperty("Sources")

    private List<SkillProof> sources = null;
    @JsonProperty("IsDisabled")

    private Boolean isDisabled = null;
    @JsonProperty("RoleText")

    private String roleText = null;
    @JsonProperty("ExperienceRoleText")

    private String experienceRoleText = null;
    @JsonProperty("ExperienceRoleTextOrder")

    private Integer experienceRoleTextOrder = null;
    @JsonProperty("Id")

    private Long id = null;

    public AssetEmployeeLink assetId(Long assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * Get assetId
     *
     * @return assetId
     **/
    @Schema(description = "")
    public Long getAssetId() {
        return assetId;
    }

    public void setAssetId(Long assetId) {
        this.assetId = assetId;
    }

    public AssetEmployeeLink name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public AssetEmployeeLink qualification(String qualification) {
        this.qualification = qualification;
        return this;
    }

    /**
     * Get qualification
     *
     * @return qualification
     **/
    @Schema(description = "")
    public String getQualification() {
        return qualification;
    }

    public void setQualification(String qualification) {
        this.qualification = qualification;
    }

    public AssetEmployeeLink title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     *
     * @return title
     **/
    @Schema(description = "")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public AssetEmployeeLink jobProfile(String jobProfile) {
        this.jobProfile = jobProfile;
        return this;
    }

    /**
     * Get jobProfile
     *
     * @return jobProfile
     **/
    @Schema(description = "")
    public String getJobProfile() {
        return jobProfile;
    }

    public void setJobProfile(String jobProfile) {
        this.jobProfile = jobProfile;
    }

    public AssetEmployeeLink location(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get location
     *
     * @return location
     **/
    @Schema(description = "")
    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    public AssetEmployeeLink code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get code
     *
     * @return code
     **/
    @Schema(description = "")
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public AssetEmployeeLink experiencePoints(Integer experiencePoints) {
        this.experiencePoints = experiencePoints;
        return this;
    }

    /**
     * Get experiencePoints
     *
     * @return experiencePoints
     **/
    @Schema(description = "")
    public Integer getExperiencePoints() {
        return experiencePoints;
    }

    public void setExperiencePoints(Integer experiencePoints) {
        this.experiencePoints = experiencePoints;
    }

    public AssetEmployeeLink description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public AssetEmployeeLink source(SourceEnum source) {
        this.source = source;
        return this;
    }

    /**
     * Get source
     *
     * @return source
     **/
    @Schema(description = "")
    public SourceEnum getSource() {
        return source;
    }

    public void setSource(SourceEnum source) {
        this.source = source;
    }

    public AssetEmployeeLink project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public AssetEmployeeLink experience(ExperienceEnum experience) {
        this.experience = experience;
        return this;
    }

    /**
     * Get experience
     *
     * @return experience
     **/
    @Schema(description = "")
    public ExperienceEnum getExperience() {
        return experience;
    }

    public void setExperience(ExperienceEnum experience) {
        this.experience = experience;
    }

    /**
     * Get experienceText
     *
     * @return experienceText
     **/
    @Schema(description = "")
    public String getExperienceText() {
        return experienceText;
    }

    public AssetEmployeeLink role(RoleEnum role) {
        this.role = role;
        return this;
    }

    /**
     * Get role
     *
     * @return role
     **/
    @Schema(description = "")
    public RoleEnum getRole() {
        return role;
    }

    public void setRole(RoleEnum role) {
        this.role = role;
    }

    public AssetEmployeeLink sources(List<SkillProof> sources) {
        this.sources = sources;
        return this;
    }

    public AssetEmployeeLink addSourcesItem(SkillProof sourcesItem) {
        if (this.sources == null) {
            this.sources = new ArrayList<SkillProof>();
        }
        this.sources.add(sourcesItem);
        return this;
    }

    /**
     * Get sources
     *
     * @return sources
     **/
    @Schema(description = "")
    public List<SkillProof> getSources() {
        return sources;
    }

    public void setSources(List<SkillProof> sources) {
        this.sources = sources;
    }

    public AssetEmployeeLink isDisabled(Boolean isDisabled) {
        this.isDisabled = isDisabled;
        return this;
    }

    /**
     * Get isDisabled
     *
     * @return isDisabled
     **/
    @Schema(description = "")
    public Boolean isIsDisabled() {
        return isDisabled;
    }

    public void setIsDisabled(Boolean isDisabled) {
        this.isDisabled = isDisabled;
    }

    /**
     * Get roleText
     *
     * @return roleText
     **/
    @Schema(description = "")
    public String getRoleText() {
        return roleText;
    }

    /**
     * Get experienceRoleText
     *
     * @return experienceRoleText
     **/
    @Schema(description = "")
    public String getExperienceRoleText() {
        return experienceRoleText;
    }

    /**
     * Get experienceRoleTextOrder
     *
     * @return experienceRoleTextOrder
     **/
    @Schema(description = "")
    public Integer getExperienceRoleTextOrder() {
        return experienceRoleTextOrder;
    }

    public AssetEmployeeLink id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AssetEmployeeLink assetEmployeeLink = (AssetEmployeeLink) o;
        return Objects.equals(this.assetId, assetEmployeeLink.assetId) &&
                Objects.equals(this.name, assetEmployeeLink.name) &&
                Objects.equals(this.qualification, assetEmployeeLink.qualification) &&
                Objects.equals(this.title, assetEmployeeLink.title) &&
                Objects.equals(this.jobProfile, assetEmployeeLink.jobProfile) &&
                Objects.equals(this.location, assetEmployeeLink.location) &&
                Objects.equals(this.code, assetEmployeeLink.code) &&
                Objects.equals(this.experiencePoints, assetEmployeeLink.experiencePoints) &&
                Objects.equals(this.description, assetEmployeeLink.description) &&
                Objects.equals(this.source, assetEmployeeLink.source) &&
                Objects.equals(this.project, assetEmployeeLink.project) &&
                Objects.equals(this.experience, assetEmployeeLink.experience) &&
                Objects.equals(this.experienceText, assetEmployeeLink.experienceText) &&
                Objects.equals(this.role, assetEmployeeLink.role) &&
                Objects.equals(this.sources, assetEmployeeLink.sources) &&
                Objects.equals(this.isDisabled, assetEmployeeLink.isDisabled) &&
                Objects.equals(this.roleText, assetEmployeeLink.roleText) &&
                Objects.equals(this.experienceRoleText, assetEmployeeLink.experienceRoleText) &&
                Objects.equals(this.experienceRoleTextOrder, assetEmployeeLink.experienceRoleTextOrder) &&
                Objects.equals(this.id, assetEmployeeLink.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(assetId, name, qualification, title, jobProfile, location, code, experiencePoints, description, source, project, experience, experienceText, role, sources, isDisabled, roleText, experienceRoleText, experienceRoleTextOrder, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AssetEmployeeLink {\n");

        sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    qualification: ").append(toIndentedString(qualification)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    jobProfile: ").append(toIndentedString(jobProfile)).append("\n");
        sb.append("    location: ").append(toIndentedString(location)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    experiencePoints: ").append(toIndentedString(experiencePoints)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    project: ").append(toIndentedString(project)).append("\n");
        sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
        sb.append("    experienceText: ").append(toIndentedString(experienceText)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
        sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
        sb.append("    roleText: ").append(toIndentedString(roleText)).append("\n");
        sb.append("    experienceRoleText: ").append(toIndentedString(experienceRoleText)).append("\n");
        sb.append("    experienceRoleTextOrder: ").append(toIndentedString(experienceRoleTextOrder)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets source
     */
    public enum SourceEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6),
        NUMBER_7(7),
        NUMBER_8(8),
        NUMBER_9(9),
        NUMBER_11(11),
        NUMBER_12(12),
        NUMBER_13(13),
        NUMBER_14(14),
        NUMBER_15(15);

        private Integer value;

        SourceEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SourceEnum fromValue(String text) {
            for (SourceEnum b : SourceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets experience
     */
    public enum ExperienceEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        ExperienceEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ExperienceEnum fromValue(String text) {
            for (ExperienceEnum b : ExperienceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets role
     */
    public enum RoleEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        RoleEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static RoleEnum fromValue(String text) {
            for (RoleEnum b : RoleEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
