/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.JobProfile;
import ch.zuehlke.insight.client.model.Skill;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

/**
 * JobProfileSkill
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class JobProfileSkill {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Skill")

    private Skill skill = null;
    @JsonProperty("Level")

    private LevelEnum level = null;
    @JsonProperty("JobProfile")

    private JobProfile jobProfile = null;
    @JsonProperty("LevelText")

    private String levelText = null;
    @JsonProperty("Reason")

    private String reason = null;
    @JsonProperty("DevelopmentSkills")

    private List<Skill> developmentSkills = null;
    @JsonProperty("Topic")

    private String topic = null;

    public JobProfileSkill id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public JobProfileSkill skill(Skill skill) {
        this.skill = skill;
        return this;
    }

    /**
     * Get skill
     *
     * @return skill
     **/
    @Schema(description = "")
    public Skill getSkill() {
        return skill;
    }

    public void setSkill(Skill skill) {
        this.skill = skill;
    }

    public JobProfileSkill level(LevelEnum level) {
        this.level = level;
        return this;
    }

    /**
     * Get level
     *
     * @return level
     **/
    @Schema(description = "")
    public LevelEnum getLevel() {
        return level;
    }

    public void setLevel(LevelEnum level) {
        this.level = level;
    }

    public JobProfileSkill jobProfile(JobProfile jobProfile) {
        this.jobProfile = jobProfile;
        return this;
    }

    /**
     * Get jobProfile
     *
     * @return jobProfile
     **/
    @Schema(description = "")
    public JobProfile getJobProfile() {
        return jobProfile;
    }

    public void setJobProfile(JobProfile jobProfile) {
        this.jobProfile = jobProfile;
    }

    /**
     * Get levelText
     *
     * @return levelText
     **/
    @Schema(description = "")
    public String getLevelText() {
        return levelText;
    }

    public JobProfileSkill reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get reason
     *
     * @return reason
     **/
    @Schema(description = "")
    public String getReason() {
        return reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public JobProfileSkill developmentSkills(List<Skill> developmentSkills) {
        this.developmentSkills = developmentSkills;
        return this;
    }

    public JobProfileSkill addDevelopmentSkillsItem(Skill developmentSkillsItem) {
        if (this.developmentSkills == null) {
            this.developmentSkills = new ArrayList<Skill>();
        }
        this.developmentSkills.add(developmentSkillsItem);
        return this;
    }

    /**
     * Get developmentSkills
     *
     * @return developmentSkills
     **/
    @Schema(description = "")
    public List<Skill> getDevelopmentSkills() {
        return developmentSkills;
    }

    public void setDevelopmentSkills(List<Skill> developmentSkills) {
        this.developmentSkills = developmentSkills;
    }

    public JobProfileSkill topic(String topic) {
        this.topic = topic;
        return this;
    }

    /**
     * Get topic
     *
     * @return topic
     **/
    @Schema(description = "")
    public String getTopic() {
        return topic;
    }

    public void setTopic(String topic) {
        this.topic = topic;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobProfileSkill jobProfileSkill = (JobProfileSkill) o;
        return Objects.equals(this.id, jobProfileSkill.id) &&
                Objects.equals(this.skill, jobProfileSkill.skill) &&
                Objects.equals(this.level, jobProfileSkill.level) &&
                Objects.equals(this.jobProfile, jobProfileSkill.jobProfile) &&
                Objects.equals(this.levelText, jobProfileSkill.levelText) &&
                Objects.equals(this.reason, jobProfileSkill.reason) &&
                Objects.equals(this.developmentSkills, jobProfileSkill.developmentSkills) &&
                Objects.equals(this.topic, jobProfileSkill.topic);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, skill, level, jobProfile, levelText, reason, developmentSkills, topic);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobProfileSkill {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
        sb.append("    level: ").append(toIndentedString(level)).append("\n");
        sb.append("    jobProfile: ").append(toIndentedString(jobProfile)).append("\n");
        sb.append("    levelText: ").append(toIndentedString(levelText)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    developmentSkills: ").append(toIndentedString(developmentSkills)).append("\n");
        sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets level
     */
    public enum LevelEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        LevelEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static LevelEnum fromValue(String text) {
            for (LevelEnum b : LevelEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
