/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Qualification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Qualification {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("VertecId")

    private Long vertecId = null;

    @JsonProperty("Grade")

    private String grade = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("CareerPath")

    private CareerPath careerPath = null;

    @JsonProperty("Count")

    private Integer count = null;

    @JsonProperty("Competencies")

    private List<Competence> competencies = null;

    @JsonProperty("DevelopmentOpportunities")

    private List<DevelopmentOpportunity> developmentOpportunities = null;

    public Qualification id(Long id) {
        this.id = id;
        return this;
    }


    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Qualification vertecId(Long vertecId) {
        this.vertecId = vertecId;
        return this;
    }


    /**
     * Get vertecId
     *
     * @return vertecId
     **/
    @Schema(description = "")
    public Long getVertecId() {
        return vertecId;
    }

    public void setVertecId(Long vertecId) {
        this.vertecId = vertecId;
    }

    public Qualification grade(String grade) {
        this.grade = grade;
        return this;
    }


    /**
     * Get grade
     *
     * @return grade
     **/
    @Schema(description = "")
    public String getGrade() {
        return grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }

    public Qualification name(String name) {
        this.name = name;
        return this;
    }


    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Qualification description(String description) {
        this.description = description;
        return this;
    }


    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Qualification careerPath(CareerPath careerPath) {
        this.careerPath = careerPath;
        return this;
    }


    /**
     * Get careerPath
     *
     * @return careerPath
     **/
    @Schema(description = "")
    public CareerPath getCareerPath() {
        return careerPath;
    }

    public void setCareerPath(CareerPath careerPath) {
        this.careerPath = careerPath;
    }

    public Qualification count(Integer count) {
        this.count = count;
        return this;
    }


    /**
     * Get count
     *
     * @return count
     **/
    @Schema(description = "")
    public Integer getCount() {
        return count;
    }

    public void setCount(Integer count) {
        this.count = count;
    }

    public Qualification competencies(List<Competence> competencies) {
        this.competencies = competencies;
        return this;
    }

    public Qualification addCompetenciesItem(Competence competenciesItem) {
        if (this.competencies == null) {
            this.competencies = new ArrayList<Competence>();
        }
        this.competencies.add(competenciesItem);
        return this;
    }

    /**
     * Get competencies
     *
     * @return competencies
     **/
    @Schema(description = "")
    public List<Competence> getCompetencies() {
        return competencies;
    }

    public void setCompetencies(List<Competence> competencies) {
        this.competencies = competencies;
    }

    public Qualification developmentOpportunities(List<DevelopmentOpportunity> developmentOpportunities) {
        this.developmentOpportunities = developmentOpportunities;
        return this;
    }

    public Qualification addDevelopmentOpportunitiesItem(DevelopmentOpportunity developmentOpportunitiesItem) {
        if (this.developmentOpportunities == null) {
            this.developmentOpportunities = new ArrayList<DevelopmentOpportunity>();
        }
        this.developmentOpportunities.add(developmentOpportunitiesItem);
        return this;
    }

    /**
     * Get developmentOpportunities
     *
     * @return developmentOpportunities
     **/
    @Schema(description = "")
    public List<DevelopmentOpportunity> getDevelopmentOpportunities() {
        return developmentOpportunities;
    }

    public void setDevelopmentOpportunities(List<DevelopmentOpportunity> developmentOpportunities) {
        this.developmentOpportunities = developmentOpportunities;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Qualification qualification = (Qualification) o;
        return Objects.equals(this.id, qualification.id) &&
                Objects.equals(this.vertecId, qualification.vertecId) &&
                Objects.equals(this.grade, qualification.grade) &&
                Objects.equals(this.name, qualification.name) &&
                Objects.equals(this.description, qualification.description) &&
                Objects.equals(this.careerPath, qualification.careerPath) &&
                Objects.equals(this.count, qualification.count) &&
                Objects.equals(this.competencies, qualification.competencies) &&
                Objects.equals(this.developmentOpportunities, qualification.developmentOpportunities);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, vertecId, grade, name, description, careerPath, count, competencies, developmentOpportunities);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Qualification {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    vertecId: ").append(toIndentedString(vertecId)).append("\n");
        sb.append("    grade: ").append(toIndentedString(grade)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    careerPath: ").append(toIndentedString(careerPath)).append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb.append("    competencies: ").append(toIndentedString(competencies)).append("\n");
        sb.append("    developmentOpportunities: ").append(toIndentedString(developmentOpportunities)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
