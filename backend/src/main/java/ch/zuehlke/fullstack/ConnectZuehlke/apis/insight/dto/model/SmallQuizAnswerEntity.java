/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * SmallQuizAnswerEntity
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class SmallQuizAnswerEntity {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Text")

    private String text = null;

    @JsonProperty("CorrectAnswered")

    private Boolean correctAnswered = null;

    @JsonProperty("Selected")

    private Boolean selected = null;

    @JsonProperty("CorrectAnswer")

    private Boolean correctAnswer = null;

    public SmallQuizAnswerEntity id(Long id) {
        this.id = id;
        return this;
    }


    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public SmallQuizAnswerEntity text(String text) {
        this.text = text;
        return this;
    }


    /**
     * Get text
     *
     * @return text
     **/
    @Schema(description = "")
    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public SmallQuizAnswerEntity correctAnswered(Boolean correctAnswered) {
        this.correctAnswered = correctAnswered;
        return this;
    }


    /**
     * Get correctAnswered
     *
     * @return correctAnswered
     **/
    @Schema(description = "")
    public Boolean isCorrectAnswered() {
        return correctAnswered;
    }

    public void setCorrectAnswered(Boolean correctAnswered) {
        this.correctAnswered = correctAnswered;
    }

    public SmallQuizAnswerEntity selected(Boolean selected) {
        this.selected = selected;
        return this;
    }


    /**
     * Get selected
     *
     * @return selected
     **/
    @Schema(description = "")
    public Boolean isSelected() {
        return selected;
    }

    public void setSelected(Boolean selected) {
        this.selected = selected;
    }

    public SmallQuizAnswerEntity correctAnswer(Boolean correctAnswer) {
        this.correctAnswer = correctAnswer;
        return this;
    }


    /**
     * Get correctAnswer
     *
     * @return correctAnswer
     **/
    @Schema(description = "")
    public Boolean isCorrectAnswer() {
        return correctAnswer;
    }

    public void setCorrectAnswer(Boolean correctAnswer) {
        this.correctAnswer = correctAnswer;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SmallQuizAnswerEntity smallQuizAnswerEntity = (SmallQuizAnswerEntity) o;
        return Objects.equals(this.id, smallQuizAnswerEntity.id) &&
                Objects.equals(this.text, smallQuizAnswerEntity.text) &&
                Objects.equals(this.correctAnswered, smallQuizAnswerEntity.correctAnswered) &&
                Objects.equals(this.selected, smallQuizAnswerEntity.selected) &&
                Objects.equals(this.correctAnswer, smallQuizAnswerEntity.correctAnswer);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, text, correctAnswered, selected, correctAnswer);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmallQuizAnswerEntity {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    correctAnswered: ").append(toIndentedString(correctAnswered)).append("\n");
        sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
        sb.append("    correctAnswer: ").append(toIndentedString(correctAnswer)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
