/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.AssetAssetLink;
import ch.zuehlke.insight.client.model.AssetBudgetPhase;
import ch.zuehlke.insight.client.model.AssetEmployeeLink;
import ch.zuehlke.insight.client.model.AssetProjectLink;
import ch.zuehlke.insight.client.model.AssetSolutionLink;
import ch.zuehlke.insight.client.model.Capability;
import ch.zuehlke.insight.client.model.Deliverable;
import ch.zuehlke.insight.client.model.Employee;
import ch.zuehlke.insight.client.model.OrganisationUnit;
import ch.zuehlke.insight.client.model.Project;
import ch.zuehlke.insight.client.model.SkillCategory;
import ch.zuehlke.insight.client.model.Tag;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * Asset
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Asset {

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("NameDe")

    private String nameDe = null;

    @JsonProperty("ShortDescription")

    private String shortDescription = null;

    @JsonProperty("DocumentNumber")

    private String documentNumber = null;

    @JsonProperty("Category")

    private SkillCategory category = null;

    @JsonProperty("Aliases")

    private String aliases = null;
    @JsonProperty("Type")

    private TypeEnum type = null;
    @JsonProperty("TypeText")

    private String typeText = null;
    @JsonProperty("SupportType")

    private SupportTypeEnum supportType = null;
    @JsonProperty("SupportTypeText")

    private String supportTypeText = null;
    @JsonProperty("Capability")

    private Capability capability = null;
    @JsonProperty("SortOrder")

    private Integer sortOrder = null;
    @JsonProperty("AdmPhase")

    private AdmPhaseEnum admPhase = null;
    @JsonProperty("AdmPhaseText")

    private String admPhaseText = null;
    @JsonProperty("Maturity")

    private MaturityEnum maturity = null;
    @JsonProperty("MaturityText")

    private String maturityText = null;
    @JsonProperty("ExpirationDate")

    private OffsetDateTime expirationDate = null;
    @JsonProperty("StateText")

    private String stateText = null;
    @JsonProperty("Form")

    private FormEnum form = null;
    @JsonProperty("FormText")

    private String formText = null;
    @JsonProperty("ExpertCount")

    private Integer expertCount = null;
    @JsonProperty("ProficientCount")

    private Integer proficientCount = null;
    @JsonProperty("BeginnerCount")

    private Integer beginnerCount = null;
    @JsonProperty("InterestedCount")

    private Integer interestedCount = null;
    @JsonProperty("CommunitySize")

    private Integer communitySize = null;
    @JsonProperty("InfoPageLink")

    private String infoPageLink = null;
    @JsonProperty("Description")

    private String description = null;
    @JsonProperty("ShowAsRoot")

    private Boolean showAsRoot = null;
    @JsonProperty("IsMetaSkill")

    private Boolean isMetaSkill = null;
    @JsonProperty("IsCustomerFocusedDeliverable")

    private Boolean isCustomerFocusedDeliverable = null;
    @JsonProperty("TotalReturn")

    private Double totalReturn = null;
    @JsonProperty("EmployeeCount")

    private Double employeeCount = null;
    @JsonProperty("ChildAssetCount")

    private Integer childAssetCount = null;
    @JsonProperty("SourceProject")

    private Project sourceProject = null;
    @JsonProperty("ProjectCount")

    private Integer projectCount = null;
    @JsonProperty("AverageRating")

    private Double averageRating = null;
    @JsonProperty("Modified")

    private OffsetDateTime modified = null;
    @JsonProperty("Creator")

    private Employee creator = null;
    @JsonProperty("Modifier")

    private Employee modifier = null;
    @JsonProperty("Tags")

    private List<Tag> tags = null;
    @JsonProperty("Profiles")

    private List<ProfilesEnum> profiles = null;
    @JsonProperty("Deliverables")

    private List<Deliverable> deliverables = null;
    @JsonProperty("SolutionLinks")

    private List<AssetSolutionLink> solutionLinks = null;
    @JsonProperty("Employees")

    private List<AssetEmployeeLink> employees = null;
    @JsonProperty("ProjectLinks")

    private List<AssetProjectLink> projectLinks = null;
    @JsonProperty("ParentAssets")

    private List<AssetAssetLink> parentAssets = null;
    @JsonProperty("ChildAssets")

    private List<AssetAssetLink> childAssets = null;
    @JsonProperty("LeadUnits")

    private List<OrganisationUnit> leadUnits = null;
    @JsonProperty("BudgetPhases")

    private List<AssetBudgetPhase> budgetPhases = null;
    @JsonProperty("Id")

    private Long id = null;

    public Asset name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Asset nameDe(String nameDe) {
        this.nameDe = nameDe;
        return this;
    }

    /**
     * Get nameDe
     *
     * @return nameDe
     **/
    @Schema(description = "")
    public String getNameDe() {
        return nameDe;
    }

    public void setNameDe(String nameDe) {
        this.nameDe = nameDe;
    }

    public Asset shortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
        return this;
    }

    /**
     * Get shortDescription
     *
     * @return shortDescription
     **/
    @Schema(description = "")
    public String getShortDescription() {
        return shortDescription;
    }

    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    public Asset documentNumber(String documentNumber) {
        this.documentNumber = documentNumber;
        return this;
    }

    /**
     * Get documentNumber
     *
     * @return documentNumber
     **/
    @Schema(description = "")
    public String getDocumentNumber() {
        return documentNumber;
    }

    public void setDocumentNumber(String documentNumber) {
        this.documentNumber = documentNumber;
    }

    public Asset category(SkillCategory category) {
        this.category = category;
        return this;
    }

    /**
     * Get category
     *
     * @return category
     **/
    @Schema(description = "")
    public SkillCategory getCategory() {
        return category;
    }

    public void setCategory(SkillCategory category) {
        this.category = category;
    }

    public Asset aliases(String aliases) {
        this.aliases = aliases;
        return this;
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @Schema(description = "")
    public String getAliases() {
        return aliases;
    }

    public void setAliases(String aliases) {
        this.aliases = aliases;
    }

    public Asset type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(description = "")
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    /**
     * Get typeText
     *
     * @return typeText
     **/
    @Schema(description = "")
    public String getTypeText() {
        return typeText;
    }

    public Asset supportType(SupportTypeEnum supportType) {
        this.supportType = supportType;
        return this;
    }

    /**
     * Get supportType
     *
     * @return supportType
     **/
    @Schema(description = "")
    public SupportTypeEnum getSupportType() {
        return supportType;
    }

    public void setSupportType(SupportTypeEnum supportType) {
        this.supportType = supportType;
    }

    /**
     * Get supportTypeText
     *
     * @return supportTypeText
     **/
    @Schema(description = "")
    public String getSupportTypeText() {
        return supportTypeText;
    }

    public Asset capability(Capability capability) {
        this.capability = capability;
        return this;
    }

    /**
     * Get capability
     *
     * @return capability
     **/
    @Schema(description = "")
    public Capability getCapability() {
        return capability;
    }

    public void setCapability(Capability capability) {
        this.capability = capability;
    }

    public Asset sortOrder(Integer sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }

    /**
     * Get sortOrder
     *
     * @return sortOrder
     **/
    @Schema(description = "")
    public Integer getSortOrder() {
        return sortOrder;
    }

    public void setSortOrder(Integer sortOrder) {
        this.sortOrder = sortOrder;
    }

    public Asset admPhase(AdmPhaseEnum admPhase) {
        this.admPhase = admPhase;
        return this;
    }

    /**
     * Get admPhase
     *
     * @return admPhase
     **/
    @Schema(description = "")
    public AdmPhaseEnum getAdmPhase() {
        return admPhase;
    }

    public void setAdmPhase(AdmPhaseEnum admPhase) {
        this.admPhase = admPhase;
    }

    /**
     * Get admPhaseText
     *
     * @return admPhaseText
     **/
    @Schema(description = "")
    public String getAdmPhaseText() {
        return admPhaseText;
    }

    public Asset maturity(MaturityEnum maturity) {
        this.maturity = maturity;
        return this;
    }

    /**
     * Get maturity
     *
     * @return maturity
     **/
    @Schema(description = "")
    public MaturityEnum getMaturity() {
        return maturity;
    }

    public void setMaturity(MaturityEnum maturity) {
        this.maturity = maturity;
    }

    /**
     * Get maturityText
     *
     * @return maturityText
     **/
    @Schema(description = "")
    public String getMaturityText() {
        return maturityText;
    }

    public Asset expirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }

    /**
     * Get expirationDate
     *
     * @return expirationDate
     **/
    @Schema(description = "")
    public OffsetDateTime getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
    }

    /**
     * Get stateText
     *
     * @return stateText
     **/
    @Schema(description = "")
    public String getStateText() {
        return stateText;
    }

    public Asset form(FormEnum form) {
        this.form = form;
        return this;
    }

    /**
     * Get form
     *
     * @return form
     **/
    @Schema(description = "")
    public FormEnum getForm() {
        return form;
    }

    public void setForm(FormEnum form) {
        this.form = form;
    }

    /**
     * Get formText
     *
     * @return formText
     **/
    @Schema(description = "")
    public String getFormText() {
        return formText;
    }

    public Asset expertCount(Integer expertCount) {
        this.expertCount = expertCount;
        return this;
    }

    /**
     * Get expertCount
     *
     * @return expertCount
     **/
    @Schema(description = "")
    public Integer getExpertCount() {
        return expertCount;
    }

    public void setExpertCount(Integer expertCount) {
        this.expertCount = expertCount;
    }

    public Asset proficientCount(Integer proficientCount) {
        this.proficientCount = proficientCount;
        return this;
    }

    /**
     * Get proficientCount
     *
     * @return proficientCount
     **/
    @Schema(description = "")
    public Integer getProficientCount() {
        return proficientCount;
    }

    public void setProficientCount(Integer proficientCount) {
        this.proficientCount = proficientCount;
    }

    public Asset beginnerCount(Integer beginnerCount) {
        this.beginnerCount = beginnerCount;
        return this;
    }

    /**
     * Get beginnerCount
     *
     * @return beginnerCount
     **/
    @Schema(description = "")
    public Integer getBeginnerCount() {
        return beginnerCount;
    }

    public void setBeginnerCount(Integer beginnerCount) {
        this.beginnerCount = beginnerCount;
    }

    public Asset interestedCount(Integer interestedCount) {
        this.interestedCount = interestedCount;
        return this;
    }

    /**
     * Get interestedCount
     *
     * @return interestedCount
     **/
    @Schema(description = "")
    public Integer getInterestedCount() {
        return interestedCount;
    }

    public void setInterestedCount(Integer interestedCount) {
        this.interestedCount = interestedCount;
    }

    /**
     * Get communitySize
     *
     * @return communitySize
     **/
    @Schema(description = "")
    public Integer getCommunitySize() {
        return communitySize;
    }

    public Asset infoPageLink(String infoPageLink) {
        this.infoPageLink = infoPageLink;
        return this;
    }

    /**
     * Get infoPageLink
     *
     * @return infoPageLink
     **/
    @Schema(description = "")
    public String getInfoPageLink() {
        return infoPageLink;
    }

    public void setInfoPageLink(String infoPageLink) {
        this.infoPageLink = infoPageLink;
    }

    public Asset description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Asset showAsRoot(Boolean showAsRoot) {
        this.showAsRoot = showAsRoot;
        return this;
    }

    /**
     * Get showAsRoot
     *
     * @return showAsRoot
     **/
    @Schema(description = "")
    public Boolean isShowAsRoot() {
        return showAsRoot;
    }

    public void setShowAsRoot(Boolean showAsRoot) {
        this.showAsRoot = showAsRoot;
    }

    public Asset isMetaSkill(Boolean isMetaSkill) {
        this.isMetaSkill = isMetaSkill;
        return this;
    }

    /**
     * Get isMetaSkill
     *
     * @return isMetaSkill
     **/
    @Schema(description = "")
    public Boolean isIsMetaSkill() {
        return isMetaSkill;
    }

    public void setIsMetaSkill(Boolean isMetaSkill) {
        this.isMetaSkill = isMetaSkill;
    }

    public Asset isCustomerFocusedDeliverable(Boolean isCustomerFocusedDeliverable) {
        this.isCustomerFocusedDeliverable = isCustomerFocusedDeliverable;
        return this;
    }

    /**
     * Get isCustomerFocusedDeliverable
     *
     * @return isCustomerFocusedDeliverable
     **/
    @Schema(description = "")
    public Boolean isIsCustomerFocusedDeliverable() {
        return isCustomerFocusedDeliverable;
    }

    public void setIsCustomerFocusedDeliverable(Boolean isCustomerFocusedDeliverable) {
        this.isCustomerFocusedDeliverable = isCustomerFocusedDeliverable;
    }

    public Asset totalReturn(Double totalReturn) {
        this.totalReturn = totalReturn;
        return this;
    }

    /**
     * Get totalReturn
     *
     * @return totalReturn
     **/
    @Schema(description = "")
    public Double getTotalReturn() {
        return totalReturn;
    }

    public void setTotalReturn(Double totalReturn) {
        this.totalReturn = totalReturn;
    }

    public Asset employeeCount(Double employeeCount) {
        this.employeeCount = employeeCount;
        return this;
    }

    /**
     * Get employeeCount
     *
     * @return employeeCount
     **/
    @Schema(description = "")
    public Double getEmployeeCount() {
        return employeeCount;
    }

    public void setEmployeeCount(Double employeeCount) {
        this.employeeCount = employeeCount;
    }

    public Asset childAssetCount(Integer childAssetCount) {
        this.childAssetCount = childAssetCount;
        return this;
    }

    /**
     * Get childAssetCount
     *
     * @return childAssetCount
     **/
    @Schema(description = "")
    public Integer getChildAssetCount() {
        return childAssetCount;
    }

    public void setChildAssetCount(Integer childAssetCount) {
        this.childAssetCount = childAssetCount;
    }

    public Asset sourceProject(Project sourceProject) {
        this.sourceProject = sourceProject;
        return this;
    }

    /**
     * Get sourceProject
     *
     * @return sourceProject
     **/
    @Schema(description = "")
    public Project getSourceProject() {
        return sourceProject;
    }

    public void setSourceProject(Project sourceProject) {
        this.sourceProject = sourceProject;
    }

    public Asset projectCount(Integer projectCount) {
        this.projectCount = projectCount;
        return this;
    }

    /**
     * Get projectCount
     *
     * @return projectCount
     **/
    @Schema(description = "")
    public Integer getProjectCount() {
        return projectCount;
    }

    public void setProjectCount(Integer projectCount) {
        this.projectCount = projectCount;
    }

    public Asset averageRating(Double averageRating) {
        this.averageRating = averageRating;
        return this;
    }

    /**
     * Get averageRating
     *
     * @return averageRating
     **/
    @Schema(description = "")
    public Double getAverageRating() {
        return averageRating;
    }

    public void setAverageRating(Double averageRating) {
        this.averageRating = averageRating;
    }

    public Asset modified(OffsetDateTime modified) {
        this.modified = modified;
        return this;
    }

    /**
     * Get modified
     *
     * @return modified
     **/
    @Schema(description = "")
    public OffsetDateTime getModified() {
        return modified;
    }

    public void setModified(OffsetDateTime modified) {
        this.modified = modified;
    }

    public Asset creator(Employee creator) {
        this.creator = creator;
        return this;
    }

    /**
     * Get creator
     *
     * @return creator
     **/
    @Schema(description = "")
    public Employee getCreator() {
        return creator;
    }

    public void setCreator(Employee creator) {
        this.creator = creator;
    }

    public Asset modifier(Employee modifier) {
        this.modifier = modifier;
        return this;
    }

    /**
     * Get modifier
     *
     * @return modifier
     **/
    @Schema(description = "")
    public Employee getModifier() {
        return modifier;
    }

    public void setModifier(Employee modifier) {
        this.modifier = modifier;
    }

    public Asset tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }

    public Asset addTagsItem(Tag tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<Tag>();
        }
        this.tags.add(tagsItem);
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     **/
    @Schema(description = "")
    public List<Tag> getTags() {
        return tags;
    }

    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }

    /**
     * Get profiles
     *
     * @return profiles
     **/
    @Schema(description = "")
    public List<ProfilesEnum> getProfiles() {
        return profiles;
    }

    public Asset deliverables(List<Deliverable> deliverables) {
        this.deliverables = deliverables;
        return this;
    }

    public Asset addDeliverablesItem(Deliverable deliverablesItem) {
        if (this.deliverables == null) {
            this.deliverables = new ArrayList<Deliverable>();
        }
        this.deliverables.add(deliverablesItem);
        return this;
    }

    /**
     * Get deliverables
     *
     * @return deliverables
     **/
    @Schema(description = "")
    public List<Deliverable> getDeliverables() {
        return deliverables;
    }

    public void setDeliverables(List<Deliverable> deliverables) {
        this.deliverables = deliverables;
    }

    public Asset solutionLinks(List<AssetSolutionLink> solutionLinks) {
        this.solutionLinks = solutionLinks;
        return this;
    }

    public Asset addSolutionLinksItem(AssetSolutionLink solutionLinksItem) {
        if (this.solutionLinks == null) {
            this.solutionLinks = new ArrayList<AssetSolutionLink>();
        }
        this.solutionLinks.add(solutionLinksItem);
        return this;
    }

    /**
     * Get solutionLinks
     *
     * @return solutionLinks
     **/
    @Schema(description = "")
    public List<AssetSolutionLink> getSolutionLinks() {
        return solutionLinks;
    }

    public void setSolutionLinks(List<AssetSolutionLink> solutionLinks) {
        this.solutionLinks = solutionLinks;
    }

    public Asset employees(List<AssetEmployeeLink> employees) {
        this.employees = employees;
        return this;
    }

    public Asset addEmployeesItem(AssetEmployeeLink employeesItem) {
        if (this.employees == null) {
            this.employees = new ArrayList<AssetEmployeeLink>();
        }
        this.employees.add(employeesItem);
        return this;
    }

    /**
     * Get employees
     *
     * @return employees
     **/
    @Schema(description = "")
    public List<AssetEmployeeLink> getEmployees() {
        return employees;
    }

    public void setEmployees(List<AssetEmployeeLink> employees) {
        this.employees = employees;
    }

    public Asset projectLinks(List<AssetProjectLink> projectLinks) {
        this.projectLinks = projectLinks;
        return this;
    }

    public Asset addProjectLinksItem(AssetProjectLink projectLinksItem) {
        if (this.projectLinks == null) {
            this.projectLinks = new ArrayList<AssetProjectLink>();
        }
        this.projectLinks.add(projectLinksItem);
        return this;
    }

    /**
     * Get projectLinks
     *
     * @return projectLinks
     **/
    @Schema(description = "")
    public List<AssetProjectLink> getProjectLinks() {
        return projectLinks;
    }

    public void setProjectLinks(List<AssetProjectLink> projectLinks) {
        this.projectLinks = projectLinks;
    }

    public Asset parentAssets(List<AssetAssetLink> parentAssets) {
        this.parentAssets = parentAssets;
        return this;
    }

    public Asset addParentAssetsItem(AssetAssetLink parentAssetsItem) {
        if (this.parentAssets == null) {
            this.parentAssets = new ArrayList<AssetAssetLink>();
        }
        this.parentAssets.add(parentAssetsItem);
        return this;
    }

    /**
     * Get parentAssets
     *
     * @return parentAssets
     **/
    @Schema(description = "")
    public List<AssetAssetLink> getParentAssets() {
        return parentAssets;
    }

    public void setParentAssets(List<AssetAssetLink> parentAssets) {
        this.parentAssets = parentAssets;
    }

    public Asset childAssets(List<AssetAssetLink> childAssets) {
        this.childAssets = childAssets;
        return this;
    }

    public Asset addChildAssetsItem(AssetAssetLink childAssetsItem) {
        if (this.childAssets == null) {
            this.childAssets = new ArrayList<AssetAssetLink>();
        }
        this.childAssets.add(childAssetsItem);
        return this;
    }

    /**
     * Get childAssets
     *
     * @return childAssets
     **/
    @Schema(description = "")
    public List<AssetAssetLink> getChildAssets() {
        return childAssets;
    }

    public void setChildAssets(List<AssetAssetLink> childAssets) {
        this.childAssets = childAssets;
    }

    public Asset leadUnits(List<OrganisationUnit> leadUnits) {
        this.leadUnits = leadUnits;
        return this;
    }

    public Asset addLeadUnitsItem(OrganisationUnit leadUnitsItem) {
        if (this.leadUnits == null) {
            this.leadUnits = new ArrayList<OrganisationUnit>();
        }
        this.leadUnits.add(leadUnitsItem);
        return this;
    }

    /**
     * Get leadUnits
     *
     * @return leadUnits
     **/
    @Schema(description = "")
    public List<OrganisationUnit> getLeadUnits() {
        return leadUnits;
    }

    public void setLeadUnits(List<OrganisationUnit> leadUnits) {
        this.leadUnits = leadUnits;
    }

    public Asset budgetPhases(List<AssetBudgetPhase> budgetPhases) {
        this.budgetPhases = budgetPhases;
        return this;
    }

    public Asset addBudgetPhasesItem(AssetBudgetPhase budgetPhasesItem) {
        if (this.budgetPhases == null) {
            this.budgetPhases = new ArrayList<AssetBudgetPhase>();
        }
        this.budgetPhases.add(budgetPhasesItem);
        return this;
    }

    /**
     * Get budgetPhases
     *
     * @return budgetPhases
     **/
    @Schema(description = "")
    public List<AssetBudgetPhase> getBudgetPhases() {
        return budgetPhases;
    }

    public void setBudgetPhases(List<AssetBudgetPhase> budgetPhases) {
        this.budgetPhases = budgetPhases;
    }

    public Asset id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Asset asset = (Asset) o;
        return Objects.equals(this.name, asset.name) &&
                Objects.equals(this.nameDe, asset.nameDe) &&
                Objects.equals(this.shortDescription, asset.shortDescription) &&
                Objects.equals(this.documentNumber, asset.documentNumber) &&
                Objects.equals(this.category, asset.category) &&
                Objects.equals(this.aliases, asset.aliases) &&
                Objects.equals(this.type, asset.type) &&
                Objects.equals(this.typeText, asset.typeText) &&
                Objects.equals(this.supportType, asset.supportType) &&
                Objects.equals(this.supportTypeText, asset.supportTypeText) &&
                Objects.equals(this.capability, asset.capability) &&
                Objects.equals(this.sortOrder, asset.sortOrder) &&
                Objects.equals(this.admPhase, asset.admPhase) &&
                Objects.equals(this.admPhaseText, asset.admPhaseText) &&
                Objects.equals(this.maturity, asset.maturity) &&
                Objects.equals(this.maturityText, asset.maturityText) &&
                Objects.equals(this.expirationDate, asset.expirationDate) &&
                Objects.equals(this.stateText, asset.stateText) &&
                Objects.equals(this.form, asset.form) &&
                Objects.equals(this.formText, asset.formText) &&
                Objects.equals(this.expertCount, asset.expertCount) &&
                Objects.equals(this.proficientCount, asset.proficientCount) &&
                Objects.equals(this.beginnerCount, asset.beginnerCount) &&
                Objects.equals(this.interestedCount, asset.interestedCount) &&
                Objects.equals(this.communitySize, asset.communitySize) &&
                Objects.equals(this.infoPageLink, asset.infoPageLink) &&
                Objects.equals(this.description, asset.description) &&
                Objects.equals(this.showAsRoot, asset.showAsRoot) &&
                Objects.equals(this.isMetaSkill, asset.isMetaSkill) &&
                Objects.equals(this.isCustomerFocusedDeliverable, asset.isCustomerFocusedDeliverable) &&
                Objects.equals(this.totalReturn, asset.totalReturn) &&
                Objects.equals(this.employeeCount, asset.employeeCount) &&
                Objects.equals(this.childAssetCount, asset.childAssetCount) &&
                Objects.equals(this.sourceProject, asset.sourceProject) &&
                Objects.equals(this.projectCount, asset.projectCount) &&
                Objects.equals(this.averageRating, asset.averageRating) &&
                Objects.equals(this.modified, asset.modified) &&
                Objects.equals(this.creator, asset.creator) &&
                Objects.equals(this.modifier, asset.modifier) &&
                Objects.equals(this.tags, asset.tags) &&
                Objects.equals(this.profiles, asset.profiles) &&
                Objects.equals(this.deliverables, asset.deliverables) &&
                Objects.equals(this.solutionLinks, asset.solutionLinks) &&
                Objects.equals(this.employees, asset.employees) &&
                Objects.equals(this.projectLinks, asset.projectLinks) &&
                Objects.equals(this.parentAssets, asset.parentAssets) &&
                Objects.equals(this.childAssets, asset.childAssets) &&
                Objects.equals(this.leadUnits, asset.leadUnits) &&
                Objects.equals(this.budgetPhases, asset.budgetPhases) &&
                Objects.equals(this.id, asset.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(name, nameDe, shortDescription, documentNumber, category, aliases, type, typeText, supportType, supportTypeText, capability, sortOrder, admPhase, admPhaseText, maturity, maturityText, expirationDate, stateText, form, formText, expertCount, proficientCount, beginnerCount, interestedCount, communitySize, infoPageLink, description, showAsRoot, isMetaSkill, isCustomerFocusedDeliverable, totalReturn, employeeCount, childAssetCount, sourceProject, projectCount, averageRating, modified, creator, modifier, tags, profiles, deliverables, solutionLinks, employees, projectLinks, parentAssets, childAssets, leadUnits, budgetPhases, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Asset {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    nameDe: ").append(toIndentedString(nameDe)).append("\n");
        sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
        sb.append("    documentNumber: ").append(toIndentedString(documentNumber)).append("\n");
        sb.append("    category: ").append(toIndentedString(category)).append("\n");
        sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    typeText: ").append(toIndentedString(typeText)).append("\n");
        sb.append("    supportType: ").append(toIndentedString(supportType)).append("\n");
        sb.append("    supportTypeText: ").append(toIndentedString(supportTypeText)).append("\n");
        sb.append("    capability: ").append(toIndentedString(capability)).append("\n");
        sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
        sb.append("    admPhase: ").append(toIndentedString(admPhase)).append("\n");
        sb.append("    admPhaseText: ").append(toIndentedString(admPhaseText)).append("\n");
        sb.append("    maturity: ").append(toIndentedString(maturity)).append("\n");
        sb.append("    maturityText: ").append(toIndentedString(maturityText)).append("\n");
        sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
        sb.append("    stateText: ").append(toIndentedString(stateText)).append("\n");
        sb.append("    form: ").append(toIndentedString(form)).append("\n");
        sb.append("    formText: ").append(toIndentedString(formText)).append("\n");
        sb.append("    expertCount: ").append(toIndentedString(expertCount)).append("\n");
        sb.append("    proficientCount: ").append(toIndentedString(proficientCount)).append("\n");
        sb.append("    beginnerCount: ").append(toIndentedString(beginnerCount)).append("\n");
        sb.append("    interestedCount: ").append(toIndentedString(interestedCount)).append("\n");
        sb.append("    communitySize: ").append(toIndentedString(communitySize)).append("\n");
        sb.append("    infoPageLink: ").append(toIndentedString(infoPageLink)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    showAsRoot: ").append(toIndentedString(showAsRoot)).append("\n");
        sb.append("    isMetaSkill: ").append(toIndentedString(isMetaSkill)).append("\n");
        sb.append("    isCustomerFocusedDeliverable: ").append(toIndentedString(isCustomerFocusedDeliverable)).append("\n");
        sb.append("    totalReturn: ").append(toIndentedString(totalReturn)).append("\n");
        sb.append("    employeeCount: ").append(toIndentedString(employeeCount)).append("\n");
        sb.append("    childAssetCount: ").append(toIndentedString(childAssetCount)).append("\n");
        sb.append("    sourceProject: ").append(toIndentedString(sourceProject)).append("\n");
        sb.append("    projectCount: ").append(toIndentedString(projectCount)).append("\n");
        sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
        sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
        sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
        sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
        sb.append("    deliverables: ").append(toIndentedString(deliverables)).append("\n");
        sb.append("    solutionLinks: ").append(toIndentedString(solutionLinks)).append("\n");
        sb.append("    employees: ").append(toIndentedString(employees)).append("\n");
        sb.append("    projectLinks: ").append(toIndentedString(projectLinks)).append("\n");
        sb.append("    parentAssets: ").append(toIndentedString(parentAssets)).append("\n");
        sb.append("    childAssets: ").append(toIndentedString(childAssets)).append("\n");
        sb.append("    leadUnits: ").append(toIndentedString(leadUnits)).append("\n");
        sb.append("    budgetPhases: ").append(toIndentedString(budgetPhases)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        NUMBER_0(0),
        NUMBER_1(1);

        private Integer value;

        TypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets supportType
     */
    public enum SupportTypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3);

        private Integer value;

        SupportTypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SupportTypeEnum fromValue(String text) {
            for (SupportTypeEnum b : SupportTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets admPhase
     */
    public enum AdmPhaseEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_8(8),
        NUMBER_16(16);

        private Integer value;

        AdmPhaseEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static AdmPhaseEnum fromValue(String text) {
            for (AdmPhaseEnum b : AdmPhaseEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets maturity
     */
    public enum MaturityEnum {
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        MaturityEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static MaturityEnum fromValue(String text) {
            for (MaturityEnum b : MaturityEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets form
     */
    public enum FormEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4);

        private Integer value;

        FormEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static FormEnum fromValue(String text) {
            for (FormEnum b : FormEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets profiles
     */
    public enum ProfilesEnum {
        _0("0"),
        _1("1"),
        _2("2");

        private Integer value;

        ProfilesEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ProfilesEnum fromValue(String text) {
            for (ProfilesEnum b : ProfilesEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
