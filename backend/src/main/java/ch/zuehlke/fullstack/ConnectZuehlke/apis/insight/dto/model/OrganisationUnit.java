/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * OrganisationUnit
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class OrganisationUnit {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("FullName")

    private String fullName = null;

    @JsonProperty("Link")

    private String link = null;

    @JsonProperty("Description")

    private String description = null;
    @JsonProperty("Type")

    private TypeEnum type = null;
    @JsonProperty("Company")

    private Company company = null;
    @JsonProperty("Manager")

    private EmployeeResult manager = null;
    @JsonProperty("ParentId")

    private Long parentId = null;
    @JsonProperty("Parent")

    private OrganisationUnit parent = null;
    @JsonProperty("Children")

    private List<OrganisationUnit> children = null;
    @JsonProperty("Skills")

    private List<Skill> skills = null;
    @JsonProperty("Participants")

    private Integer participants = null;
    @JsonProperty("IsGroup")

    private Boolean isGroup = null;
    @JsonProperty("SourceLink")

    private String sourceLink = null;
    @JsonProperty("LastUpdated")

    private OffsetDateTime lastUpdated = null;
    @JsonProperty("TypeText")

    private String typeText = null;

    public OrganisationUnit id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public OrganisationUnit name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public OrganisationUnit fullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get fullName
     *
     * @return fullName
     **/
    @Schema(description = "")
    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public OrganisationUnit link(String link) {
        this.link = link;
        return this;
    }

    /**
     * Get link
     *
     * @return link
     **/
    @Schema(description = "")
    public String getLink() {
        return link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    public OrganisationUnit description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public OrganisationUnit type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(description = "")
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    public OrganisationUnit company(Company company) {
        this.company = company;
        return this;
    }

    /**
     * Get company
     *
     * @return company
     **/
    @Schema(description = "")
    public Company getCompany() {
        return company;
    }

    public void setCompany(Company company) {
        this.company = company;
    }

    public OrganisationUnit manager(EmployeeResult manager) {
        this.manager = manager;
        return this;
    }

    /**
     * Get manager
     *
     * @return manager
     **/
    @Schema(description = "")
    public EmployeeResult getManager() {
        return manager;
    }

    public void setManager(EmployeeResult manager) {
        this.manager = manager;
    }

    public OrganisationUnit parentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * Get parentId
     *
     * @return parentId
     **/
    @Schema(description = "")
    public Long getParentId() {
        return parentId;
    }

    public void setParentId(Long parentId) {
        this.parentId = parentId;
    }

    public OrganisationUnit parent(OrganisationUnit parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get parent
     *
     * @return parent
     **/
    @Schema(description = "")
    public OrganisationUnit getParent() {
        return parent;
    }

    public void setParent(OrganisationUnit parent) {
        this.parent = parent;
    }

    public OrganisationUnit children(List<OrganisationUnit> children) {
        this.children = children;
        return this;
    }

    public OrganisationUnit addChildrenItem(OrganisationUnit childrenItem) {
        if (this.children == null) {
            this.children = new ArrayList<OrganisationUnit>();
        }
        this.children.add(childrenItem);
        return this;
    }

    /**
     * Get children
     *
     * @return children
     **/
    @Schema(description = "")
    public List<OrganisationUnit> getChildren() {
        return children;
    }

    public void setChildren(List<OrganisationUnit> children) {
        this.children = children;
    }

    public OrganisationUnit skills(List<Skill> skills) {
        this.skills = skills;
        return this;
    }

    public OrganisationUnit addSkillsItem(Skill skillsItem) {
        if (this.skills == null) {
            this.skills = new ArrayList<Skill>();
        }
        this.skills.add(skillsItem);
        return this;
    }

    /**
     * Get skills
     *
     * @return skills
     **/
    @Schema(description = "")
    public List<Skill> getSkills() {
        return skills;
    }

    public void setSkills(List<Skill> skills) {
        this.skills = skills;
    }

    public OrganisationUnit participants(Integer participants) {
        this.participants = participants;
        return this;
    }

    /**
     * Get participants
     *
     * @return participants
     **/
    @Schema(description = "")
    public Integer getParticipants() {
        return participants;
    }

    public void setParticipants(Integer participants) {
        this.participants = participants;
    }

    public OrganisationUnit isGroup(Boolean isGroup) {
        this.isGroup = isGroup;
        return this;
    }

    /**
     * Get isGroup
     *
     * @return isGroup
     **/
    @Schema(description = "")
    public Boolean isIsGroup() {
        return isGroup;
    }

    public void setIsGroup(Boolean isGroup) {
        this.isGroup = isGroup;
    }

    public OrganisationUnit sourceLink(String sourceLink) {
        this.sourceLink = sourceLink;
        return this;
    }

    /**
     * Get sourceLink
     *
     * @return sourceLink
     **/
    @Schema(description = "")
    public String getSourceLink() {
        return sourceLink;
    }

    public void setSourceLink(String sourceLink) {
        this.sourceLink = sourceLink;
    }

    public OrganisationUnit lastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get lastUpdated
     *
     * @return lastUpdated
     **/
    @Schema(description = "")
    public OffsetDateTime getLastUpdated() {
        return lastUpdated;
    }

    public void setLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    /**
     * Get typeText
     *
     * @return typeText
     **/
    @Schema(description = "")
    public String getTypeText() {
        return typeText;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrganisationUnit organisationUnit = (OrganisationUnit) o;
        return Objects.equals(this.id, organisationUnit.id) &&
                Objects.equals(this.name, organisationUnit.name) &&
                Objects.equals(this.fullName, organisationUnit.fullName) &&
                Objects.equals(this.link, organisationUnit.link) &&
                Objects.equals(this.description, organisationUnit.description) &&
                Objects.equals(this.type, organisationUnit.type) &&
                Objects.equals(this.company, organisationUnit.company) &&
                Objects.equals(this.manager, organisationUnit.manager) &&
                Objects.equals(this.parentId, organisationUnit.parentId) &&
                Objects.equals(this.parent, organisationUnit.parent) &&
                Objects.equals(this.children, organisationUnit.children) &&
                Objects.equals(this.skills, organisationUnit.skills) &&
                Objects.equals(this.participants, organisationUnit.participants) &&
                Objects.equals(this.isGroup, organisationUnit.isGroup) &&
                Objects.equals(this.sourceLink, organisationUnit.sourceLink) &&
                Objects.equals(this.lastUpdated, organisationUnit.lastUpdated) &&
                Objects.equals(this.typeText, organisationUnit.typeText);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, name, fullName, link, description, type, company, manager, parentId, parent, children, skills, participants, isGroup, sourceLink, lastUpdated, typeText);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrganisationUnit {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    link: ").append(toIndentedString(link)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
        sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
        sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
        sb.append("    children: ").append(toIndentedString(children)).append("\n");
        sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
        sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
        sb.append("    isGroup: ").append(toIndentedString(isGroup)).append("\n");
        sb.append("    sourceLink: ").append(toIndentedString(sourceLink)).append("\n");
        sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
        sb.append("    typeText: ").append(toIndentedString(typeText)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        TypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
