/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CapabilitySkillOfficeSummary
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class CapabilitySkillOfficeSummary {

    @JsonProperty("Office")

    private Office office = null;
    @JsonProperty("Demand")

    private DemandEnum demand = null;
    @JsonProperty("DemandText")

    private String demandText = null;
    @JsonProperty("Beginners")

    private List<CapabilityExpert> beginners = null;
    @JsonProperty("Proficients")

    private List<CapabilityExpert> proficients = null;
    @JsonProperty("Experts")

    private List<CapabilityExpert> experts = null;
    @JsonProperty("ThoughtLeaders")

    private List<CapabilityExpert> thoughtLeaders = null;
    @JsonProperty("Goals")

    private List<SkillDevelopmentGoal> goals = null;

    public CapabilitySkillOfficeSummary office(Office office) {
        this.office = office;
        return this;
    }

    /**
     * Get office
     *
     * @return office
     **/
    @Schema(description = "")
    public Office getOffice() {
        return office;
    }

    public void setOffice(Office office) {
        this.office = office;
    }

    public CapabilitySkillOfficeSummary demand(DemandEnum demand) {
        this.demand = demand;
        return this;
    }

    /**
     * Get demand
     *
     * @return demand
     **/
    @Schema(description = "")
    public DemandEnum getDemand() {
        return demand;
    }

    public void setDemand(DemandEnum demand) {
        this.demand = demand;
    }

    /**
     * Get demandText
     *
     * @return demandText
     **/
    @Schema(description = "")
    public String getDemandText() {
        return demandText;
    }

    public CapabilitySkillOfficeSummary beginners(List<CapabilityExpert> beginners) {
        this.beginners = beginners;
        return this;
    }

    public CapabilitySkillOfficeSummary addBeginnersItem(CapabilityExpert beginnersItem) {
        if (this.beginners == null) {
            this.beginners = new ArrayList<CapabilityExpert>();
        }
        this.beginners.add(beginnersItem);
        return this;
    }

    /**
     * Get beginners
     *
     * @return beginners
     **/
    @Schema(description = "")
    public List<CapabilityExpert> getBeginners() {
        return beginners;
    }

    public void setBeginners(List<CapabilityExpert> beginners) {
        this.beginners = beginners;
    }

    public CapabilitySkillOfficeSummary proficients(List<CapabilityExpert> proficients) {
        this.proficients = proficients;
        return this;
    }

    public CapabilitySkillOfficeSummary addProficientsItem(CapabilityExpert proficientsItem) {
        if (this.proficients == null) {
            this.proficients = new ArrayList<CapabilityExpert>();
        }
        this.proficients.add(proficientsItem);
        return this;
    }

    /**
     * Get proficients
     *
     * @return proficients
     **/
    @Schema(description = "")
    public List<CapabilityExpert> getProficients() {
        return proficients;
    }

    public void setProficients(List<CapabilityExpert> proficients) {
        this.proficients = proficients;
    }

    public CapabilitySkillOfficeSummary experts(List<CapabilityExpert> experts) {
        this.experts = experts;
        return this;
    }

    public CapabilitySkillOfficeSummary addExpertsItem(CapabilityExpert expertsItem) {
        if (this.experts == null) {
            this.experts = new ArrayList<CapabilityExpert>();
        }
        this.experts.add(expertsItem);
        return this;
    }

    /**
     * Get experts
     *
     * @return experts
     **/
    @Schema(description = "")
    public List<CapabilityExpert> getExperts() {
        return experts;
    }

    public void setExperts(List<CapabilityExpert> experts) {
        this.experts = experts;
    }

    public CapabilitySkillOfficeSummary thoughtLeaders(List<CapabilityExpert> thoughtLeaders) {
        this.thoughtLeaders = thoughtLeaders;
        return this;
    }

    public CapabilitySkillOfficeSummary addThoughtLeadersItem(CapabilityExpert thoughtLeadersItem) {
        if (this.thoughtLeaders == null) {
            this.thoughtLeaders = new ArrayList<CapabilityExpert>();
        }
        this.thoughtLeaders.add(thoughtLeadersItem);
        return this;
    }

    /**
     * Get thoughtLeaders
     *
     * @return thoughtLeaders
     **/
    @Schema(description = "")
    public List<CapabilityExpert> getThoughtLeaders() {
        return thoughtLeaders;
    }

    public void setThoughtLeaders(List<CapabilityExpert> thoughtLeaders) {
        this.thoughtLeaders = thoughtLeaders;
    }

    public CapabilitySkillOfficeSummary goals(List<SkillDevelopmentGoal> goals) {
        this.goals = goals;
        return this;
    }

    public CapabilitySkillOfficeSummary addGoalsItem(SkillDevelopmentGoal goalsItem) {
        if (this.goals == null) {
            this.goals = new ArrayList<SkillDevelopmentGoal>();
        }
        this.goals.add(goalsItem);
        return this;
    }

    /**
     * Get goals
     *
     * @return goals
     **/
    @Schema(description = "")
    public List<SkillDevelopmentGoal> getGoals() {
        return goals;
    }

    public void setGoals(List<SkillDevelopmentGoal> goals) {
        this.goals = goals;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CapabilitySkillOfficeSummary capabilitySkillOfficeSummary = (CapabilitySkillOfficeSummary) o;
        return Objects.equals(this.office, capabilitySkillOfficeSummary.office) &&
                Objects.equals(this.demand, capabilitySkillOfficeSummary.demand) &&
                Objects.equals(this.demandText, capabilitySkillOfficeSummary.demandText) &&
                Objects.equals(this.beginners, capabilitySkillOfficeSummary.beginners) &&
                Objects.equals(this.proficients, capabilitySkillOfficeSummary.proficients) &&
                Objects.equals(this.experts, capabilitySkillOfficeSummary.experts) &&
                Objects.equals(this.thoughtLeaders, capabilitySkillOfficeSummary.thoughtLeaders) &&
                Objects.equals(this.goals, capabilitySkillOfficeSummary.goals);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(office, demand, demandText, beginners, proficients, experts, thoughtLeaders, goals);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CapabilitySkillOfficeSummary {\n");

        sb.append("    office: ").append(toIndentedString(office)).append("\n");
        sb.append("    demand: ").append(toIndentedString(demand)).append("\n");
        sb.append("    demandText: ").append(toIndentedString(demandText)).append("\n");
        sb.append("    beginners: ").append(toIndentedString(beginners)).append("\n");
        sb.append("    proficients: ").append(toIndentedString(proficients)).append("\n");
        sb.append("    experts: ").append(toIndentedString(experts)).append("\n");
        sb.append("    thoughtLeaders: ").append(toIndentedString(thoughtLeaders)).append("\n");
        sb.append("    goals: ").append(toIndentedString(goals)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets demand
     */
    public enum DemandEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4);

        private Integer value;

        DemandEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static DemandEnum fromValue(String text) {
            for (DemandEnum b : DemandEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
