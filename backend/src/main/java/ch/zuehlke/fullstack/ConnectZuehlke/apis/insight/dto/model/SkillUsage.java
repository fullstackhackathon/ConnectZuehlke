/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.fullstack.ConnectZuehlke.apis.insight.dto.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * SkillUsage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class SkillUsage {

    @JsonProperty("Project")

    private Project project = null;

    @JsonProperty("Skill")

    private Skill skill = null;

    @JsonProperty("Employees")

    private List<EmployeeResult> employees = null;

    @JsonProperty("Amount")

    private Integer amount = null;

    public SkillUsage project(Project project) {
        this.project = project;
        return this;
    }


    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public SkillUsage skill(Skill skill) {
        this.skill = skill;
        return this;
    }


    /**
     * Get skill
     *
     * @return skill
     **/
    @Schema(description = "")
    public Skill getSkill() {
        return skill;
    }

    public void setSkill(Skill skill) {
        this.skill = skill;
    }

    public SkillUsage employees(List<EmployeeResult> employees) {
        this.employees = employees;
        return this;
    }

    public SkillUsage addEmployeesItem(EmployeeResult employeesItem) {
        if (this.employees == null) {
            this.employees = new ArrayList<EmployeeResult>();
        }
        this.employees.add(employeesItem);
        return this;
    }

    /**
     * Get employees
     *
     * @return employees
     **/
    @Schema(description = "")
    public List<EmployeeResult> getEmployees() {
        return employees;
    }

    public void setEmployees(List<EmployeeResult> employees) {
        this.employees = employees;
    }

    public SkillUsage amount(Integer amount) {
        this.amount = amount;
        return this;
    }


    /**
     * Get amount
     *
     * @return amount
     **/
    @Schema(description = "")
    public Integer getAmount() {
        return amount;
    }

    public void setAmount(Integer amount) {
        this.amount = amount;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SkillUsage skillUsage = (SkillUsage) o;
        return Objects.equals(this.project, skillUsage.project) &&
                Objects.equals(this.skill, skillUsage.skill) &&
                Objects.equals(this.employees, skillUsage.employees) &&
                Objects.equals(this.amount, skillUsage.amount);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(project, skill, employees, amount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SkillUsage {\n");

        sb.append("    project: ").append(toIndentedString(project)).append("\n");
        sb.append("    skill: ").append(toIndentedString(skill)).append("\n");
        sb.append("    employees: ").append(toIndentedString(employees)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
