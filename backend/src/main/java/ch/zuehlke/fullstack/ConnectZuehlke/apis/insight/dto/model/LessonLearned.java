/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.EmployeeResult;
import ch.zuehlke.insight.client.model.Practice;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * LessonLearned
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class LessonLearned {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("Practice")

    private Practice practice = null;

    @JsonProperty("IsPositive")

    private Boolean isPositive = null;

    @JsonProperty("Employee")

    private EmployeeResult employee = null;

    public LessonLearned id(Long id) {
        this.id = id;
        return this;
    }


    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public LessonLearned description(String description) {
        this.description = description;
        return this;
    }


    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public LessonLearned practice(Practice practice) {
        this.practice = practice;
        return this;
    }


    /**
     * Get practice
     *
     * @return practice
     **/
    @Schema(description = "")
    public Practice getPractice() {
        return practice;
    }

    public void setPractice(Practice practice) {
        this.practice = practice;
    }

    public LessonLearned isPositive(Boolean isPositive) {
        this.isPositive = isPositive;
        return this;
    }


    /**
     * Get isPositive
     *
     * @return isPositive
     **/
    @Schema(description = "")
    public Boolean isIsPositive() {
        return isPositive;
    }

    public void setIsPositive(Boolean isPositive) {
        this.isPositive = isPositive;
    }

    public LessonLearned employee(EmployeeResult employee) {
        this.employee = employee;
        return this;
    }


    /**
     * Get employee
     *
     * @return employee
     **/
    @Schema(description = "")
    public EmployeeResult getEmployee() {
        return employee;
    }

    public void setEmployee(EmployeeResult employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LessonLearned lessonLearned = (LessonLearned) o;
        return Objects.equals(this.id, lessonLearned.id) &&
                Objects.equals(this.description, lessonLearned.description) &&
                Objects.equals(this.practice, lessonLearned.practice) &&
                Objects.equals(this.isPositive, lessonLearned.isPositive) &&
                Objects.equals(this.employee, lessonLearned.employee);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, description, practice, isPositive, employee);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LessonLearned {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    practice: ").append(toIndentedString(practice)).append("\n");
        sb.append("    isPositive: ").append(toIndentedString(isPositive)).append("\n");
        sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
