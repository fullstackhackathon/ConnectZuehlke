/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.Attachment;
import ch.zuehlke.insight.client.model.Employee;
import ch.zuehlke.insight.client.model.Training;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

/**
 * TrainingParticipation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class TrainingParticipation {

    @JsonProperty("Id")

    private Long id = null;

    @JsonProperty("Rating")

    private Double rating = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("ImportName")

    private String importName = null;

    @JsonProperty("Date")

    private OffsetDateTime date = null;

    @JsonProperty("Employee")

    private Employee employee = null;
    @JsonProperty("Source")

    private SourceEnum source = null;
    @JsonProperty("SourceText")

    private String sourceText = null;
    @JsonProperty("Attachment")

    private Attachment attachment = null;
    @JsonProperty("Training")

    private Training training = null;
    @JsonProperty("TrainingRecordId")

    private Long trainingRecordId = null;
    @JsonProperty("Year")

    private Integer year = null;

    public TrainingParticipation id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public TrainingParticipation rating(Double rating) {
        this.rating = rating;
        return this;
    }

    /**
     * Get rating
     *
     * @return rating
     **/
    @Schema(description = "")
    public Double getRating() {
        return rating;
    }

    public void setRating(Double rating) {
        this.rating = rating;
    }

    public TrainingParticipation description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public TrainingParticipation importName(String importName) {
        this.importName = importName;
        return this;
    }

    /**
     * Get importName
     *
     * @return importName
     **/
    @Schema(description = "")
    public String getImportName() {
        return importName;
    }

    public void setImportName(String importName) {
        this.importName = importName;
    }

    public TrainingParticipation date(OffsetDateTime date) {
        this.date = date;
        return this;
    }

    /**
     * Get date
     *
     * @return date
     **/
    @Schema(description = "")
    public OffsetDateTime getDate() {
        return date;
    }

    public void setDate(OffsetDateTime date) {
        this.date = date;
    }

    public TrainingParticipation employee(Employee employee) {
        this.employee = employee;
        return this;
    }

    /**
     * Get employee
     *
     * @return employee
     **/
    @Schema(description = "")
    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public TrainingParticipation source(SourceEnum source) {
        this.source = source;
        return this;
    }

    /**
     * Get source
     *
     * @return source
     **/
    @Schema(description = "")
    public SourceEnum getSource() {
        return source;
    }

    public void setSource(SourceEnum source) {
        this.source = source;
    }

    /**
     * Get sourceText
     *
     * @return sourceText
     **/
    @Schema(description = "")
    public String getSourceText() {
        return sourceText;
    }

    public TrainingParticipation attachment(Attachment attachment) {
        this.attachment = attachment;
        return this;
    }

    /**
     * Get attachment
     *
     * @return attachment
     **/
    @Schema(description = "")
    public Attachment getAttachment() {
        return attachment;
    }

    public void setAttachment(Attachment attachment) {
        this.attachment = attachment;
    }

    public TrainingParticipation training(Training training) {
        this.training = training;
        return this;
    }

    /**
     * Get training
     *
     * @return training
     **/
    @Schema(description = "")
    public Training getTraining() {
        return training;
    }

    public void setTraining(Training training) {
        this.training = training;
    }

    public TrainingParticipation trainingRecordId(Long trainingRecordId) {
        this.trainingRecordId = trainingRecordId;
        return this;
    }

    /**
     * Get trainingRecordId
     *
     * @return trainingRecordId
     **/
    @Schema(description = "")
    public Long getTrainingRecordId() {
        return trainingRecordId;
    }

    public void setTrainingRecordId(Long trainingRecordId) {
        this.trainingRecordId = trainingRecordId;
    }

    /**
     * Get year
     *
     * @return year
     **/
    @Schema(description = "")
    public Integer getYear() {
        return year;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TrainingParticipation trainingParticipation = (TrainingParticipation) o;
        return Objects.equals(this.id, trainingParticipation.id) &&
                Objects.equals(this.rating, trainingParticipation.rating) &&
                Objects.equals(this.description, trainingParticipation.description) &&
                Objects.equals(this.importName, trainingParticipation.importName) &&
                Objects.equals(this.date, trainingParticipation.date) &&
                Objects.equals(this.employee, trainingParticipation.employee) &&
                Objects.equals(this.source, trainingParticipation.source) &&
                Objects.equals(this.sourceText, trainingParticipation.sourceText) &&
                Objects.equals(this.attachment, trainingParticipation.attachment) &&
                Objects.equals(this.training, trainingParticipation.training) &&
                Objects.equals(this.trainingRecordId, trainingParticipation.trainingRecordId) &&
                Objects.equals(this.year, trainingParticipation.year);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(id, rating, description, importName, date, employee, source, sourceText, attachment, training, trainingRecordId, year);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TrainingParticipation {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    importName: ").append(toIndentedString(importName)).append("\n");
        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    sourceText: ").append(toIndentedString(sourceText)).append("\n");
        sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
        sb.append("    training: ").append(toIndentedString(training)).append("\n");
        sb.append("    trainingRecordId: ").append(toIndentedString(trainingRecordId)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets source
     */
    public enum SourceEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        SourceEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SourceEnum fromValue(String text) {
            for (SourceEnum b : SourceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
