/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.Contact;
import ch.zuehlke.insight.client.model.Customer;
import ch.zuehlke.insight.client.model.CustomerJourney;
import ch.zuehlke.insight.client.model.Document;
import ch.zuehlke.insight.client.model.EmployeeResult;
import ch.zuehlke.insight.client.model.LessonLearned;
import ch.zuehlke.insight.client.model.MarketingMaterial;
import ch.zuehlke.insight.client.model.Offering;
import ch.zuehlke.insight.client.model.ProjectPhase;
import ch.zuehlke.insight.client.model.SkillUsage;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * Project
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class Project {

    @JsonProperty("VertecId")

    private Long vertecId = null;

    @JsonProperty("Active")

    private Boolean active = null;

    @JsonProperty("Secret")

    private Boolean secret = null;

    @JsonProperty("Code")

    private String code = null;

    @JsonProperty("Name")

    private String name = null;

    @JsonProperty("FullName")

    private String fullName = null;

    @JsonProperty("Description")

    private String description = null;

    @JsonProperty("PublicDescription")

    private String publicDescription = null;

    @JsonProperty("Title")

    private String title = null;

    @JsonProperty("PublicTitleDe")

    private String publicTitleDe = null;

    @JsonProperty("PublicDescriptionDe")

    private String publicDescriptionDe = null;

    @JsonProperty("CreateDate")

    private OffsetDateTime createDate = null;

    @JsonProperty("Offering")

    private Offering offering = null;
    @JsonProperty("ReleaseStateDe")

    private ReleaseStateDeEnum releaseStateDe = null;
    @JsonProperty("PublicTitleEn")

    private String publicTitleEn = null;
    @JsonProperty("PublicDescriptionEn")

    private String publicDescriptionEn = null;
    @JsonProperty("ReleaseStateEn")

    private ReleaseStateEnEnum releaseStateEn = null;
    @JsonProperty("AdmPhases")

    private AdmPhasesEnum admPhases = null;
    @JsonProperty("AdmPhasesText")

    private String admPhasesText = null;
    @JsonProperty("Currency")

    private String currency = null;
    @JsonProperty("Company")

    private String company = null;
    @JsonProperty("CompanyId")

    private Long companyId = null;
    @JsonProperty("DataQualityMessage")

    private String dataQualityMessage = null;
    @JsonProperty("From")

    private OffsetDateTime from = null;
    @JsonProperty("To")

    private OffsetDateTime to = null;
    @JsonProperty("Industry")

    private String industry = null;
    @JsonProperty("Solution")

    private String solution = null;
    @JsonProperty("SolutionId")

    private Long solutionId = null;
    @JsonProperty("SalesState")

    private SalesStateEnum salesState = null;
    @JsonProperty("Probability")

    private Double probability = null;
    @JsonProperty("SalesStateText")

    private String salesStateText = null;
    @JsonProperty("SalesType")

    private SalesTypeEnum salesType = null;
    @JsonProperty("SalesTypeText")

    private String salesTypeText = null;
    @JsonProperty("SalesSource")

    private SalesSourceEnum salesSource = null;
    @JsonProperty("SalesSourceText")

    private String salesSourceText = null;
    @JsonProperty("SupportType")

    private SupportTypeEnum supportType = null;
    @JsonProperty("SupportTypeText")

    private String supportTypeText = null;
    @JsonProperty("TypeOfContract")

    private TypeOfContractEnum typeOfContract = null;
    @JsonProperty("TypeOfContractText")

    private String typeOfContractText = null;
    @JsonProperty("ReimbursementMethod")

    private ReimbursementMethodEnum reimbursementMethod = null;
    @JsonProperty("ReimbursementMethodText")

    private String reimbursementMethodText = null;
    @JsonProperty("ProjectPhases")

    private List<ProjectPhase> projectPhases = null;
    @JsonProperty("SalesStates")

    private List<SalesStatesEnum> salesStates = null;
    @JsonProperty("MarketingMaterial")

    private List<MarketingMaterial> marketingMaterial = null;
    @JsonProperty("Documents")

    private List<Document> documents = null;
    @JsonProperty("AdditionalDocuments")

    private List<Document> additionalDocuments = null;
    @JsonProperty("Skills")

    private List<SkillUsage> skills = null;
    @JsonProperty("LessonsLearned")

    private List<LessonLearned> lessonsLearned = null;
    @JsonProperty("Contact")

    private Contact contact = null;
    @JsonProperty("Stakeholder")

    private List<Contact> stakeholder = null;
    @JsonProperty("StaffingManager")

    private EmployeeResult staffingManager = null;
    @JsonProperty("DdStaffingManager")

    private EmployeeResult ddStaffingManager = null;
    @JsonProperty("EngagementManager")

    private EmployeeResult engagementManager = null;
    @JsonProperty("ProjectManager")

    private EmployeeResult projectManager = null;
    @JsonProperty("Assistance")

    private EmployeeResult assistance = null;
    @JsonProperty("BusinessDeveloper")

    private EmployeeResult businessDeveloper = null;
    @JsonProperty("Customer")

    private Customer customer = null;
    @JsonProperty("Journey")

    private CustomerJourney journey = null;
    @JsonProperty("GrossMargin")

    private Double grossMargin = null;
    @JsonProperty("Turnover")

    private Double turnover = null;
    @JsonProperty("TargetGrossMargin")

    private Double targetGrossMargin = null;
    @JsonProperty("Id")

    private Long id = null;

    public Project vertecId(Long vertecId) {
        this.vertecId = vertecId;
        return this;
    }

    /**
     * Get vertecId
     *
     * @return vertecId
     **/
    @Schema(description = "")
    public Long getVertecId() {
        return vertecId;
    }

    public void setVertecId(Long vertecId) {
        this.vertecId = vertecId;
    }

    public Project active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Get active
     *
     * @return active
     **/
    @Schema(description = "")
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Project secret(Boolean secret) {
        this.secret = secret;
        return this;
    }

    /**
     * Get secret
     *
     * @return secret
     **/
    @Schema(description = "")
    public Boolean isSecret() {
        return secret;
    }

    public void setSecret(Boolean secret) {
        this.secret = secret;
    }

    public Project code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get code
     *
     * @return code
     **/
    @Schema(description = "")
    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public Project name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * Get fullName
     *
     * @return fullName
     **/
    @Schema(description = "")
    public String getFullName() {
        return fullName;
    }

    public Project description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Get publicDescription
     *
     * @return publicDescription
     **/
    @Schema(description = "")
    public String getPublicDescription() {
        return publicDescription;
    }

    /**
     * Get title
     *
     * @return title
     **/
    @Schema(description = "")
    public String getTitle() {
        return title;
    }

    public Project publicTitleDe(String publicTitleDe) {
        this.publicTitleDe = publicTitleDe;
        return this;
    }

    /**
     * Get publicTitleDe
     *
     * @return publicTitleDe
     **/
    @Schema(description = "")
    public String getPublicTitleDe() {
        return publicTitleDe;
    }

    public void setPublicTitleDe(String publicTitleDe) {
        this.publicTitleDe = publicTitleDe;
    }

    public Project publicDescriptionDe(String publicDescriptionDe) {
        this.publicDescriptionDe = publicDescriptionDe;
        return this;
    }

    /**
     * Get publicDescriptionDe
     *
     * @return publicDescriptionDe
     **/
    @Schema(description = "")
    public String getPublicDescriptionDe() {
        return publicDescriptionDe;
    }

    public void setPublicDescriptionDe(String publicDescriptionDe) {
        this.publicDescriptionDe = publicDescriptionDe;
    }

    public Project createDate(OffsetDateTime createDate) {
        this.createDate = createDate;
        return this;
    }

    /**
     * Get createDate
     *
     * @return createDate
     **/
    @Schema(description = "")
    public OffsetDateTime getCreateDate() {
        return createDate;
    }

    public void setCreateDate(OffsetDateTime createDate) {
        this.createDate = createDate;
    }

    public Project offering(Offering offering) {
        this.offering = offering;
        return this;
    }

    /**
     * Get offering
     *
     * @return offering
     **/
    @Schema(description = "")
    public Offering getOffering() {
        return offering;
    }

    public void setOffering(Offering offering) {
        this.offering = offering;
    }

    public Project releaseStateDe(ReleaseStateDeEnum releaseStateDe) {
        this.releaseStateDe = releaseStateDe;
        return this;
    }

    /**
     * Get releaseStateDe
     *
     * @return releaseStateDe
     **/
    @Schema(description = "")
    public ReleaseStateDeEnum getReleaseStateDe() {
        return releaseStateDe;
    }

    public void setReleaseStateDe(ReleaseStateDeEnum releaseStateDe) {
        this.releaseStateDe = releaseStateDe;
    }

    public Project publicTitleEn(String publicTitleEn) {
        this.publicTitleEn = publicTitleEn;
        return this;
    }

    /**
     * Get publicTitleEn
     *
     * @return publicTitleEn
     **/
    @Schema(description = "")
    public String getPublicTitleEn() {
        return publicTitleEn;
    }

    public void setPublicTitleEn(String publicTitleEn) {
        this.publicTitleEn = publicTitleEn;
    }

    public Project publicDescriptionEn(String publicDescriptionEn) {
        this.publicDescriptionEn = publicDescriptionEn;
        return this;
    }

    /**
     * Get publicDescriptionEn
     *
     * @return publicDescriptionEn
     **/
    @Schema(description = "")
    public String getPublicDescriptionEn() {
        return publicDescriptionEn;
    }

    public void setPublicDescriptionEn(String publicDescriptionEn) {
        this.publicDescriptionEn = publicDescriptionEn;
    }

    public Project releaseStateEn(ReleaseStateEnEnum releaseStateEn) {
        this.releaseStateEn = releaseStateEn;
        return this;
    }

    /**
     * Get releaseStateEn
     *
     * @return releaseStateEn
     **/
    @Schema(description = "")
    public ReleaseStateEnEnum getReleaseStateEn() {
        return releaseStateEn;
    }

    public void setReleaseStateEn(ReleaseStateEnEnum releaseStateEn) {
        this.releaseStateEn = releaseStateEn;
    }

    public Project admPhases(AdmPhasesEnum admPhases) {
        this.admPhases = admPhases;
        return this;
    }

    /**
     * Get admPhases
     *
     * @return admPhases
     **/
    @Schema(description = "")
    public AdmPhasesEnum getAdmPhases() {
        return admPhases;
    }

    public void setAdmPhases(AdmPhasesEnum admPhases) {
        this.admPhases = admPhases;
    }

    /**
     * Get admPhasesText
     *
     * @return admPhasesText
     **/
    @Schema(description = "")
    public String getAdmPhasesText() {
        return admPhasesText;
    }

    public Project currency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get currency
     *
     * @return currency
     **/
    @Schema(description = "")
    public String getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public Project company(String company) {
        this.company = company;
        return this;
    }

    /**
     * Get company
     *
     * @return company
     **/
    @Schema(description = "")
    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public Project companyId(Long companyId) {
        this.companyId = companyId;
        return this;
    }

    /**
     * Get companyId
     *
     * @return companyId
     **/
    @Schema(description = "")
    public Long getCompanyId() {
        return companyId;
    }

    public void setCompanyId(Long companyId) {
        this.companyId = companyId;
    }

    public Project dataQualityMessage(String dataQualityMessage) {
        this.dataQualityMessage = dataQualityMessage;
        return this;
    }

    /**
     * Get dataQualityMessage
     *
     * @return dataQualityMessage
     **/
    @Schema(description = "")
    public String getDataQualityMessage() {
        return dataQualityMessage;
    }

    public void setDataQualityMessage(String dataQualityMessage) {
        this.dataQualityMessage = dataQualityMessage;
    }

    public Project from(OffsetDateTime from) {
        this.from = from;
        return this;
    }

    /**
     * Get from
     *
     * @return from
     **/
    @Schema(description = "")
    public OffsetDateTime getFrom() {
        return from;
    }

    public void setFrom(OffsetDateTime from) {
        this.from = from;
    }

    public Project to(OffsetDateTime to) {
        this.to = to;
        return this;
    }

    /**
     * Get to
     *
     * @return to
     **/
    @Schema(description = "")
    public OffsetDateTime getTo() {
        return to;
    }

    public void setTo(OffsetDateTime to) {
        this.to = to;
    }

    public Project industry(String industry) {
        this.industry = industry;
        return this;
    }

    /**
     * Get industry
     *
     * @return industry
     **/
    @Schema(description = "")
    public String getIndustry() {
        return industry;
    }

    public void setIndustry(String industry) {
        this.industry = industry;
    }

    public Project solution(String solution) {
        this.solution = solution;
        return this;
    }

    /**
     * Get solution
     *
     * @return solution
     **/
    @Schema(description = "")
    public String getSolution() {
        return solution;
    }

    public void setSolution(String solution) {
        this.solution = solution;
    }

    public Project solutionId(Long solutionId) {
        this.solutionId = solutionId;
        return this;
    }

    /**
     * Get solutionId
     *
     * @return solutionId
     **/
    @Schema(description = "")
    public Long getSolutionId() {
        return solutionId;
    }

    public void setSolutionId(Long solutionId) {
        this.solutionId = solutionId;
    }

    public Project salesState(SalesStateEnum salesState) {
        this.salesState = salesState;
        return this;
    }

    /**
     * Get salesState
     *
     * @return salesState
     **/
    @Schema(description = "")
    public SalesStateEnum getSalesState() {
        return salesState;
    }

    public void setSalesState(SalesStateEnum salesState) {
        this.salesState = salesState;
    }

    public Project probability(Double probability) {
        this.probability = probability;
        return this;
    }

    /**
     * Get probability
     *
     * @return probability
     **/
    @Schema(description = "")
    public Double getProbability() {
        return probability;
    }

    public void setProbability(Double probability) {
        this.probability = probability;
    }

    /**
     * Get salesStateText
     *
     * @return salesStateText
     **/
    @Schema(description = "")
    public String getSalesStateText() {
        return salesStateText;
    }

    public Project salesType(SalesTypeEnum salesType) {
        this.salesType = salesType;
        return this;
    }

    /**
     * Get salesType
     *
     * @return salesType
     **/
    @Schema(description = "")
    public SalesTypeEnum getSalesType() {
        return salesType;
    }

    public void setSalesType(SalesTypeEnum salesType) {
        this.salesType = salesType;
    }

    /**
     * Get salesTypeText
     *
     * @return salesTypeText
     **/
    @Schema(description = "")
    public String getSalesTypeText() {
        return salesTypeText;
    }

    public Project salesSource(SalesSourceEnum salesSource) {
        this.salesSource = salesSource;
        return this;
    }

    /**
     * Get salesSource
     *
     * @return salesSource
     **/
    @Schema(description = "")
    public SalesSourceEnum getSalesSource() {
        return salesSource;
    }

    public void setSalesSource(SalesSourceEnum salesSource) {
        this.salesSource = salesSource;
    }

    /**
     * Get salesSourceText
     *
     * @return salesSourceText
     **/
    @Schema(description = "")
    public String getSalesSourceText() {
        return salesSourceText;
    }

    public Project supportType(SupportTypeEnum supportType) {
        this.supportType = supportType;
        return this;
    }

    /**
     * Get supportType
     *
     * @return supportType
     **/
    @Schema(description = "")
    public SupportTypeEnum getSupportType() {
        return supportType;
    }

    public void setSupportType(SupportTypeEnum supportType) {
        this.supportType = supportType;
    }

    /**
     * Get supportTypeText
     *
     * @return supportTypeText
     **/
    @Schema(description = "")
    public String getSupportTypeText() {
        return supportTypeText;
    }

    public Project typeOfContract(TypeOfContractEnum typeOfContract) {
        this.typeOfContract = typeOfContract;
        return this;
    }

    /**
     * Get typeOfContract
     *
     * @return typeOfContract
     **/
    @Schema(description = "")
    public TypeOfContractEnum getTypeOfContract() {
        return typeOfContract;
    }

    public void setTypeOfContract(TypeOfContractEnum typeOfContract) {
        this.typeOfContract = typeOfContract;
    }

    /**
     * Get typeOfContractText
     *
     * @return typeOfContractText
     **/
    @Schema(description = "")
    public String getTypeOfContractText() {
        return typeOfContractText;
    }

    public Project reimbursementMethod(ReimbursementMethodEnum reimbursementMethod) {
        this.reimbursementMethod = reimbursementMethod;
        return this;
    }

    /**
     * Get reimbursementMethod
     *
     * @return reimbursementMethod
     **/
    @Schema(description = "")
    public ReimbursementMethodEnum getReimbursementMethod() {
        return reimbursementMethod;
    }

    public void setReimbursementMethod(ReimbursementMethodEnum reimbursementMethod) {
        this.reimbursementMethod = reimbursementMethod;
    }

    /**
     * Get reimbursementMethodText
     *
     * @return reimbursementMethodText
     **/
    @Schema(description = "")
    public String getReimbursementMethodText() {
        return reimbursementMethodText;
    }

    public Project projectPhases(List<ProjectPhase> projectPhases) {
        this.projectPhases = projectPhases;
        return this;
    }

    public Project addProjectPhasesItem(ProjectPhase projectPhasesItem) {
        if (this.projectPhases == null) {
            this.projectPhases = new ArrayList<ProjectPhase>();
        }
        this.projectPhases.add(projectPhasesItem);
        return this;
    }

    /**
     * Get projectPhases
     *
     * @return projectPhases
     **/
    @Schema(description = "")
    public List<ProjectPhase> getProjectPhases() {
        return projectPhases;
    }

    public void setProjectPhases(List<ProjectPhase> projectPhases) {
        this.projectPhases = projectPhases;
    }

    public Project salesStates(List<SalesStatesEnum> salesStates) {
        this.salesStates = salesStates;
        return this;
    }

    public Project addSalesStatesItem(SalesStatesEnum salesStatesItem) {
        if (this.salesStates == null) {
            this.salesStates = new ArrayList<SalesStatesEnum>();
        }
        this.salesStates.add(salesStatesItem);
        return this;
    }

    /**
     * Get salesStates
     *
     * @return salesStates
     **/
    @Schema(description = "")
    public List<SalesStatesEnum> getSalesStates() {
        return salesStates;
    }

    public void setSalesStates(List<SalesStatesEnum> salesStates) {
        this.salesStates = salesStates;
    }

    public Project marketingMaterial(List<MarketingMaterial> marketingMaterial) {
        this.marketingMaterial = marketingMaterial;
        return this;
    }

    public Project addMarketingMaterialItem(MarketingMaterial marketingMaterialItem) {
        if (this.marketingMaterial == null) {
            this.marketingMaterial = new ArrayList<MarketingMaterial>();
        }
        this.marketingMaterial.add(marketingMaterialItem);
        return this;
    }

    /**
     * Get marketingMaterial
     *
     * @return marketingMaterial
     **/
    @Schema(description = "")
    public List<MarketingMaterial> getMarketingMaterial() {
        return marketingMaterial;
    }

    public void setMarketingMaterial(List<MarketingMaterial> marketingMaterial) {
        this.marketingMaterial = marketingMaterial;
    }

    public Project documents(List<Document> documents) {
        this.documents = documents;
        return this;
    }

    public Project addDocumentsItem(Document documentsItem) {
        if (this.documents == null) {
            this.documents = new ArrayList<Document>();
        }
        this.documents.add(documentsItem);
        return this;
    }

    /**
     * Get documents
     *
     * @return documents
     **/
    @Schema(description = "")
    public List<Document> getDocuments() {
        return documents;
    }

    public void setDocuments(List<Document> documents) {
        this.documents = documents;
    }

    public Project additionalDocuments(List<Document> additionalDocuments) {
        this.additionalDocuments = additionalDocuments;
        return this;
    }

    public Project addAdditionalDocumentsItem(Document additionalDocumentsItem) {
        if (this.additionalDocuments == null) {
            this.additionalDocuments = new ArrayList<Document>();
        }
        this.additionalDocuments.add(additionalDocumentsItem);
        return this;
    }

    /**
     * Get additionalDocuments
     *
     * @return additionalDocuments
     **/
    @Schema(description = "")
    public List<Document> getAdditionalDocuments() {
        return additionalDocuments;
    }

    public void setAdditionalDocuments(List<Document> additionalDocuments) {
        this.additionalDocuments = additionalDocuments;
    }

    public Project skills(List<SkillUsage> skills) {
        this.skills = skills;
        return this;
    }

    public Project addSkillsItem(SkillUsage skillsItem) {
        if (this.skills == null) {
            this.skills = new ArrayList<SkillUsage>();
        }
        this.skills.add(skillsItem);
        return this;
    }

    /**
     * Get skills
     *
     * @return skills
     **/
    @Schema(description = "")
    public List<SkillUsage> getSkills() {
        return skills;
    }

    public void setSkills(List<SkillUsage> skills) {
        this.skills = skills;
    }

    public Project lessonsLearned(List<LessonLearned> lessonsLearned) {
        this.lessonsLearned = lessonsLearned;
        return this;
    }

    public Project addLessonsLearnedItem(LessonLearned lessonsLearnedItem) {
        if (this.lessonsLearned == null) {
            this.lessonsLearned = new ArrayList<LessonLearned>();
        }
        this.lessonsLearned.add(lessonsLearnedItem);
        return this;
    }

    /**
     * Get lessonsLearned
     *
     * @return lessonsLearned
     **/
    @Schema(description = "")
    public List<LessonLearned> getLessonsLearned() {
        return lessonsLearned;
    }

    public void setLessonsLearned(List<LessonLearned> lessonsLearned) {
        this.lessonsLearned = lessonsLearned;
    }

    public Project contact(Contact contact) {
        this.contact = contact;
        return this;
    }

    /**
     * Get contact
     *
     * @return contact
     **/
    @Schema(description = "")
    public Contact getContact() {
        return contact;
    }

    public void setContact(Contact contact) {
        this.contact = contact;
    }

    public Project stakeholder(List<Contact> stakeholder) {
        this.stakeholder = stakeholder;
        return this;
    }

    public Project addStakeholderItem(Contact stakeholderItem) {
        if (this.stakeholder == null) {
            this.stakeholder = new ArrayList<Contact>();
        }
        this.stakeholder.add(stakeholderItem);
        return this;
    }

    /**
     * Get stakeholder
     *
     * @return stakeholder
     **/
    @Schema(description = "")
    public List<Contact> getStakeholder() {
        return stakeholder;
    }

    public void setStakeholder(List<Contact> stakeholder) {
        this.stakeholder = stakeholder;
    }

    public Project staffingManager(EmployeeResult staffingManager) {
        this.staffingManager = staffingManager;
        return this;
    }

    /**
     * Get staffingManager
     *
     * @return staffingManager
     **/
    @Schema(description = "")
    public EmployeeResult getStaffingManager() {
        return staffingManager;
    }

    public void setStaffingManager(EmployeeResult staffingManager) {
        this.staffingManager = staffingManager;
    }

    public Project ddStaffingManager(EmployeeResult ddStaffingManager) {
        this.ddStaffingManager = ddStaffingManager;
        return this;
    }

    /**
     * Get ddStaffingManager
     *
     * @return ddStaffingManager
     **/
    @Schema(description = "")
    public EmployeeResult getDdStaffingManager() {
        return ddStaffingManager;
    }

    public void setDdStaffingManager(EmployeeResult ddStaffingManager) {
        this.ddStaffingManager = ddStaffingManager;
    }

    public Project engagementManager(EmployeeResult engagementManager) {
        this.engagementManager = engagementManager;
        return this;
    }

    /**
     * Get engagementManager
     *
     * @return engagementManager
     **/
    @Schema(description = "")
    public EmployeeResult getEngagementManager() {
        return engagementManager;
    }

    public void setEngagementManager(EmployeeResult engagementManager) {
        this.engagementManager = engagementManager;
    }

    public Project projectManager(EmployeeResult projectManager) {
        this.projectManager = projectManager;
        return this;
    }

    /**
     * Get projectManager
     *
     * @return projectManager
     **/
    @Schema(description = "")
    public EmployeeResult getProjectManager() {
        return projectManager;
    }

    public void setProjectManager(EmployeeResult projectManager) {
        this.projectManager = projectManager;
    }

    public Project assistance(EmployeeResult assistance) {
        this.assistance = assistance;
        return this;
    }

    /**
     * Get assistance
     *
     * @return assistance
     **/
    @Schema(description = "")
    public EmployeeResult getAssistance() {
        return assistance;
    }

    public void setAssistance(EmployeeResult assistance) {
        this.assistance = assistance;
    }

    public Project businessDeveloper(EmployeeResult businessDeveloper) {
        this.businessDeveloper = businessDeveloper;
        return this;
    }

    /**
     * Get businessDeveloper
     *
     * @return businessDeveloper
     **/
    @Schema(description = "")
    public EmployeeResult getBusinessDeveloper() {
        return businessDeveloper;
    }

    public void setBusinessDeveloper(EmployeeResult businessDeveloper) {
        this.businessDeveloper = businessDeveloper;
    }

    public Project customer(Customer customer) {
        this.customer = customer;
        return this;
    }

    /**
     * Get customer
     *
     * @return customer
     **/
    @Schema(description = "")
    public Customer getCustomer() {
        return customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public Project journey(CustomerJourney journey) {
        this.journey = journey;
        return this;
    }

    /**
     * Get journey
     *
     * @return journey
     **/
    @Schema(description = "")
    public CustomerJourney getJourney() {
        return journey;
    }

    public void setJourney(CustomerJourney journey) {
        this.journey = journey;
    }

    public Project grossMargin(Double grossMargin) {
        this.grossMargin = grossMargin;
        return this;
    }

    /**
     * Get grossMargin
     *
     * @return grossMargin
     **/
    @Schema(description = "")
    public Double getGrossMargin() {
        return grossMargin;
    }

    public void setGrossMargin(Double grossMargin) {
        this.grossMargin = grossMargin;
    }

    public Project turnover(Double turnover) {
        this.turnover = turnover;
        return this;
    }

    /**
     * Get turnover
     *
     * @return turnover
     **/
    @Schema(description = "")
    public Double getTurnover() {
        return turnover;
    }

    public void setTurnover(Double turnover) {
        this.turnover = turnover;
    }

    public Project targetGrossMargin(Double targetGrossMargin) {
        this.targetGrossMargin = targetGrossMargin;
        return this;
    }

    /**
     * Get targetGrossMargin
     *
     * @return targetGrossMargin
     **/
    @Schema(description = "")
    public Double getTargetGrossMargin() {
        return targetGrossMargin;
    }

    public void setTargetGrossMargin(Double targetGrossMargin) {
        this.targetGrossMargin = targetGrossMargin;
    }

    public Project id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Project project = (Project) o;
        return Objects.equals(this.vertecId, project.vertecId) &&
                Objects.equals(this.active, project.active) &&
                Objects.equals(this.secret, project.secret) &&
                Objects.equals(this.code, project.code) &&
                Objects.equals(this.name, project.name) &&
                Objects.equals(this.fullName, project.fullName) &&
                Objects.equals(this.description, project.description) &&
                Objects.equals(this.publicDescription, project.publicDescription) &&
                Objects.equals(this.title, project.title) &&
                Objects.equals(this.publicTitleDe, project.publicTitleDe) &&
                Objects.equals(this.publicDescriptionDe, project.publicDescriptionDe) &&
                Objects.equals(this.createDate, project.createDate) &&
                Objects.equals(this.offering, project.offering) &&
                Objects.equals(this.releaseStateDe, project.releaseStateDe) &&
                Objects.equals(this.publicTitleEn, project.publicTitleEn) &&
                Objects.equals(this.publicDescriptionEn, project.publicDescriptionEn) &&
                Objects.equals(this.releaseStateEn, project.releaseStateEn) &&
                Objects.equals(this.admPhases, project.admPhases) &&
                Objects.equals(this.admPhasesText, project.admPhasesText) &&
                Objects.equals(this.currency, project.currency) &&
                Objects.equals(this.company, project.company) &&
                Objects.equals(this.companyId, project.companyId) &&
                Objects.equals(this.dataQualityMessage, project.dataQualityMessage) &&
                Objects.equals(this.from, project.from) &&
                Objects.equals(this.to, project.to) &&
                Objects.equals(this.industry, project.industry) &&
                Objects.equals(this.solution, project.solution) &&
                Objects.equals(this.solutionId, project.solutionId) &&
                Objects.equals(this.salesState, project.salesState) &&
                Objects.equals(this.probability, project.probability) &&
                Objects.equals(this.salesStateText, project.salesStateText) &&
                Objects.equals(this.salesType, project.salesType) &&
                Objects.equals(this.salesTypeText, project.salesTypeText) &&
                Objects.equals(this.salesSource, project.salesSource) &&
                Objects.equals(this.salesSourceText, project.salesSourceText) &&
                Objects.equals(this.supportType, project.supportType) &&
                Objects.equals(this.supportTypeText, project.supportTypeText) &&
                Objects.equals(this.typeOfContract, project.typeOfContract) &&
                Objects.equals(this.typeOfContractText, project.typeOfContractText) &&
                Objects.equals(this.reimbursementMethod, project.reimbursementMethod) &&
                Objects.equals(this.reimbursementMethodText, project.reimbursementMethodText) &&
                Objects.equals(this.projectPhases, project.projectPhases) &&
                Objects.equals(this.salesStates, project.salesStates) &&
                Objects.equals(this.marketingMaterial, project.marketingMaterial) &&
                Objects.equals(this.documents, project.documents) &&
                Objects.equals(this.additionalDocuments, project.additionalDocuments) &&
                Objects.equals(this.skills, project.skills) &&
                Objects.equals(this.lessonsLearned, project.lessonsLearned) &&
                Objects.equals(this.contact, project.contact) &&
                Objects.equals(this.stakeholder, project.stakeholder) &&
                Objects.equals(this.staffingManager, project.staffingManager) &&
                Objects.equals(this.ddStaffingManager, project.ddStaffingManager) &&
                Objects.equals(this.engagementManager, project.engagementManager) &&
                Objects.equals(this.projectManager, project.projectManager) &&
                Objects.equals(this.assistance, project.assistance) &&
                Objects.equals(this.businessDeveloper, project.businessDeveloper) &&
                Objects.equals(this.customer, project.customer) &&
                Objects.equals(this.journey, project.journey) &&
                Objects.equals(this.grossMargin, project.grossMargin) &&
                Objects.equals(this.turnover, project.turnover) &&
                Objects.equals(this.targetGrossMargin, project.targetGrossMargin) &&
                Objects.equals(this.id, project.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(vertecId, active, secret, code, name, fullName, description, publicDescription, title, publicTitleDe, publicDescriptionDe, createDate, offering, releaseStateDe, publicTitleEn, publicDescriptionEn, releaseStateEn, admPhases, admPhasesText, currency, company, companyId, dataQualityMessage, from, to, industry, solution, solutionId, salesState, probability, salesStateText, salesType, salesTypeText, salesSource, salesSourceText, supportType, supportTypeText, typeOfContract, typeOfContractText, reimbursementMethod, reimbursementMethodText, projectPhases, salesStates, marketingMaterial, documents, additionalDocuments, skills, lessonsLearned, contact, stakeholder, staffingManager, ddStaffingManager, engagementManager, projectManager, assistance, businessDeveloper, customer, journey, grossMargin, turnover, targetGrossMargin, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Project {\n");

        sb.append("    vertecId: ").append(toIndentedString(vertecId)).append("\n");
        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    publicDescription: ").append(toIndentedString(publicDescription)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    publicTitleDe: ").append(toIndentedString(publicTitleDe)).append("\n");
        sb.append("    publicDescriptionDe: ").append(toIndentedString(publicDescriptionDe)).append("\n");
        sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
        sb.append("    offering: ").append(toIndentedString(offering)).append("\n");
        sb.append("    releaseStateDe: ").append(toIndentedString(releaseStateDe)).append("\n");
        sb.append("    publicTitleEn: ").append(toIndentedString(publicTitleEn)).append("\n");
        sb.append("    publicDescriptionEn: ").append(toIndentedString(publicDescriptionEn)).append("\n");
        sb.append("    releaseStateEn: ").append(toIndentedString(releaseStateEn)).append("\n");
        sb.append("    admPhases: ").append(toIndentedString(admPhases)).append("\n");
        sb.append("    admPhasesText: ").append(toIndentedString(admPhasesText)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
        sb.append("    dataQualityMessage: ").append(toIndentedString(dataQualityMessage)).append("\n");
        sb.append("    from: ").append(toIndentedString(from)).append("\n");
        sb.append("    to: ").append(toIndentedString(to)).append("\n");
        sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
        sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
        sb.append("    solutionId: ").append(toIndentedString(solutionId)).append("\n");
        sb.append("    salesState: ").append(toIndentedString(salesState)).append("\n");
        sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
        sb.append("    salesStateText: ").append(toIndentedString(salesStateText)).append("\n");
        sb.append("    salesType: ").append(toIndentedString(salesType)).append("\n");
        sb.append("    salesTypeText: ").append(toIndentedString(salesTypeText)).append("\n");
        sb.append("    salesSource: ").append(toIndentedString(salesSource)).append("\n");
        sb.append("    salesSourceText: ").append(toIndentedString(salesSourceText)).append("\n");
        sb.append("    supportType: ").append(toIndentedString(supportType)).append("\n");
        sb.append("    supportTypeText: ").append(toIndentedString(supportTypeText)).append("\n");
        sb.append("    typeOfContract: ").append(toIndentedString(typeOfContract)).append("\n");
        sb.append("    typeOfContractText: ").append(toIndentedString(typeOfContractText)).append("\n");
        sb.append("    reimbursementMethod: ").append(toIndentedString(reimbursementMethod)).append("\n");
        sb.append("    reimbursementMethodText: ").append(toIndentedString(reimbursementMethodText)).append("\n");
        sb.append("    projectPhases: ").append(toIndentedString(projectPhases)).append("\n");
        sb.append("    salesStates: ").append(toIndentedString(salesStates)).append("\n");
        sb.append("    marketingMaterial: ").append(toIndentedString(marketingMaterial)).append("\n");
        sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
        sb.append("    additionalDocuments: ").append(toIndentedString(additionalDocuments)).append("\n");
        sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
        sb.append("    lessonsLearned: ").append(toIndentedString(lessonsLearned)).append("\n");
        sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
        sb.append("    stakeholder: ").append(toIndentedString(stakeholder)).append("\n");
        sb.append("    staffingManager: ").append(toIndentedString(staffingManager)).append("\n");
        sb.append("    ddStaffingManager: ").append(toIndentedString(ddStaffingManager)).append("\n");
        sb.append("    engagementManager: ").append(toIndentedString(engagementManager)).append("\n");
        sb.append("    projectManager: ").append(toIndentedString(projectManager)).append("\n");
        sb.append("    assistance: ").append(toIndentedString(assistance)).append("\n");
        sb.append("    businessDeveloper: ").append(toIndentedString(businessDeveloper)).append("\n");
        sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
        sb.append("    journey: ").append(toIndentedString(journey)).append("\n");
        sb.append("    grossMargin: ").append(toIndentedString(grossMargin)).append("\n");
        sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
        sb.append("    targetGrossMargin: ").append(toIndentedString(targetGrossMargin)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets releaseStateDe
     */
    public enum ReleaseStateDeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        ReleaseStateDeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ReleaseStateDeEnum fromValue(String text) {
            for (ReleaseStateDeEnum b : ReleaseStateDeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }


    /**
     * Gets or Sets releaseStateEn
     */
    public enum ReleaseStateEnEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        ReleaseStateEnEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ReleaseStateEnEnum fromValue(String text) {
            for (ReleaseStateEnEnum b : ReleaseStateEnEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets admPhases
     */
    public enum AdmPhasesEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_4(4),
        NUMBER_8(8),
        NUMBER_16(16);

        private Integer value;

        AdmPhasesEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static AdmPhasesEnum fromValue(String text) {
            for (AdmPhasesEnum b : AdmPhasesEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets salesState
     */
    public enum SalesStateEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4);

        private Integer value;

        SalesStateEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SalesStateEnum fromValue(String text) {
            for (SalesStateEnum b : SalesStateEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }


    /**
     * Gets or Sets salesType
     */
    public enum SalesTypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4);

        private Integer value;

        SalesTypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SalesTypeEnum fromValue(String text) {
            for (SalesTypeEnum b : SalesTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets salesSource
     */
    public enum SalesSourceEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5);

        private Integer value;

        SalesSourceEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SalesSourceEnum fromValue(String text) {
            for (SalesSourceEnum b : SalesSourceEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets supportType
     */
    public enum SupportTypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3),
        NUMBER_4(4),
        NUMBER_5(5),
        NUMBER_6(6);

        private Integer value;

        SupportTypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SupportTypeEnum fromValue(String text) {
            for (SupportTypeEnum b : SupportTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets typeOfContract
     */
    public enum TypeOfContractEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2);

        private Integer value;

        TypeOfContractEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeOfContractEnum fromValue(String text) {
            for (TypeOfContractEnum b : TypeOfContractEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets reimbursementMethod
     */
    public enum ReimbursementMethodEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3);

        private Integer value;

        ReimbursementMethodEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static ReimbursementMethodEnum fromValue(String text) {
            for (ReimbursementMethodEnum b : ReimbursementMethodEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

    /**
     * Gets or Sets salesStates
     */
    public enum SalesStatesEnum {
        _5("5"),
        _10("10"),
        _11("11"),
        _12("12"),
        _20("20"),
        _21("21"),
        _30("30"),
        _40("40"),
        _99("99");

        private Integer value;

        SalesStatesEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static SalesStatesEnum fromValue(String text) {
            for (SalesStatesEnum b : SalesStatesEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
