/*
 * WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.zuehlke.insight.client.model;

import java.util.Objects;

import ch.zuehlke.insight.client.model.Employee;
import ch.zuehlke.insight.client.model.EmployeeTimelineItem;
import ch.zuehlke.insight.client.model.Project;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * EmployeeTimelineItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T13:18:19.970506+01:00[Europe/Zurich]")
public class EmployeeTimelineItem {

    @JsonProperty("Project")

    private Project project = null;

    @JsonProperty("FeedbackEmployee")

    private Employee feedbackEmployee = null;

    @JsonProperty("Date")

    private OffsetDateTime date = null;

    @JsonProperty("Year")

    private String year = null;
    @JsonProperty("Type")

    private TypeEnum type = null;
    @JsonProperty("TypeText")

    private String typeText = null;
    @JsonProperty("Title")

    private String title = null;
    @JsonProperty("Description")

    private String description = null;
    @JsonProperty("Completed")

    private Boolean completed = null;
    @JsonProperty("Deleted")

    private Boolean deleted = null;
    @JsonProperty("ParentId")

    private Long parentId = null;
    @JsonProperty("Children")

    private List<EmployeeTimelineItem> children = null;
    @JsonProperty("Id")

    private Long id = null;

    public EmployeeTimelineItem project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public EmployeeTimelineItem feedbackEmployee(Employee feedbackEmployee) {
        this.feedbackEmployee = feedbackEmployee;
        return this;
    }

    /**
     * Get feedbackEmployee
     *
     * @return feedbackEmployee
     **/
    @Schema(description = "")
    public Employee getFeedbackEmployee() {
        return feedbackEmployee;
    }

    public void setFeedbackEmployee(Employee feedbackEmployee) {
        this.feedbackEmployee = feedbackEmployee;
    }

    public EmployeeTimelineItem date(OffsetDateTime date) {
        this.date = date;
        return this;
    }

    /**
     * Get date
     *
     * @return date
     **/
    @Schema(description = "")
    public OffsetDateTime getDate() {
        return date;
    }

    public void setDate(OffsetDateTime date) {
        this.date = date;
    }

    /**
     * Get year
     *
     * @return year
     **/
    @Schema(description = "")
    public String getYear() {
        return year;
    }

    public EmployeeTimelineItem type(TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(description = "")
    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    /**
     * Get typeText
     *
     * @return typeText
     **/
    @Schema(description = "")
    public String getTypeText() {
        return typeText;
    }

    public EmployeeTimelineItem title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     *
     * @return title
     **/
    @Schema(description = "")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public EmployeeTimelineItem description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public EmployeeTimelineItem completed(Boolean completed) {
        this.completed = completed;
        return this;
    }

    /**
     * Get completed
     *
     * @return completed
     **/
    @Schema(description = "")
    public Boolean isCompleted() {
        return completed;
    }

    public void setCompleted(Boolean completed) {
        this.completed = completed;
    }

    public EmployeeTimelineItem deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Get deleted
     *
     * @return deleted
     **/
    @Schema(description = "")
    public Boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public EmployeeTimelineItem parentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }

    /**
     * Get parentId
     *
     * @return parentId
     **/
    @Schema(description = "")
    public Long getParentId() {
        return parentId;
    }

    public void setParentId(Long parentId) {
        this.parentId = parentId;
    }

    public EmployeeTimelineItem children(List<EmployeeTimelineItem> children) {
        this.children = children;
        return this;
    }

    public EmployeeTimelineItem addChildrenItem(EmployeeTimelineItem childrenItem) {
        if (this.children == null) {
            this.children = new ArrayList<EmployeeTimelineItem>();
        }
        this.children.add(childrenItem);
        return this;
    }

    /**
     * Get children
     *
     * @return children
     **/
    @Schema(description = "")
    public List<EmployeeTimelineItem> getChildren() {
        return children;
    }

    public void setChildren(List<EmployeeTimelineItem> children) {
        this.children = children;
    }

    public EmployeeTimelineItem id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmployeeTimelineItem employeeTimelineItem = (EmployeeTimelineItem) o;
        return Objects.equals(this.project, employeeTimelineItem.project) &&
                Objects.equals(this.feedbackEmployee, employeeTimelineItem.feedbackEmployee) &&
                Objects.equals(this.date, employeeTimelineItem.date) &&
                Objects.equals(this.year, employeeTimelineItem.year) &&
                Objects.equals(this.type, employeeTimelineItem.type) &&
                Objects.equals(this.typeText, employeeTimelineItem.typeText) &&
                Objects.equals(this.title, employeeTimelineItem.title) &&
                Objects.equals(this.description, employeeTimelineItem.description) &&
                Objects.equals(this.completed, employeeTimelineItem.completed) &&
                Objects.equals(this.deleted, employeeTimelineItem.deleted) &&
                Objects.equals(this.parentId, employeeTimelineItem.parentId) &&
                Objects.equals(this.children, employeeTimelineItem.children) &&
                Objects.equals(this.id, employeeTimelineItem.id);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(project, feedbackEmployee, date, year, type, typeText, title, description, completed, deleted, parentId, children, id);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EmployeeTimelineItem {\n");

        sb.append("    project: ").append(toIndentedString(project)).append("\n");
        sb.append("    feedbackEmployee: ").append(toIndentedString(feedbackEmployee)).append("\n");
        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    typeText: ").append(toIndentedString(typeText)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
        sb.append("    children: ").append(toIndentedString(children)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        NUMBER_0(0),
        NUMBER_1(1),
        NUMBER_2(2),
        NUMBER_3(3);

        private Integer value;

        TypeEnum(Integer value) {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue(String text) {
            for (TypeEnum b : TypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public Integer getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}
